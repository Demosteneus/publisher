#!/usr/bin/env texlua

-- 
-- See file COPYING in the root directory for license details.

installdir=os.selfdir:gsub("^(.+)/bin$","%1")
srcdir = installdir .. "/src"
srcfiles = {"lua/fileutils.lua","lua/fonts/fontloader.lua","lua/i18n.lua","lua/optionparser.lua","lua/publisher/element.lua","lua/publisher/fonts.lua","lua/publisher/helper.lua","lua/publisher/layout_funktionen.lua","lua/publisher/raster.lua","lua/publisher/seite.lua","lua/publisher/spinit.lua","lua/publisher/tabelle.lua","lua/publisher/xpath_funktionen.lua","lua/publisher.lua","lua/sdini.lua","lua/sdscripts.lua","lua/viznodelist.lua","lua/xmlparser.lua","lua/xpath.lua"}

os.setenv("LUA_PATH",srcdir .. "/lua/?.lua;" .. installdir .. "/lib/?.lua;" .. srcdir .. "/lua/common/?.lua;")

package.path = os.getenv("LUA_PATH")
require("optionparser")

function update_translation_files(lang)
	assert(lang,"No language given")
	local cmdline
	lfs.chdir(srcdir)
	cmdline = 'xgettext --from-code="UTF-8" -k"log" -k"err" -k"warning" -s -o po/publisher.pot '.. table.concat(srcfiles," ")
	print(cmdline)
  os.execute(cmdline)
	cmdline = string.format('msgmerge -s -U po/%s.po po/publisher.pot',lang)
	print(cmdline)
  os.execute(cmdline)
	cmdline = string.format('msgfmt -c -v -o po/%s.mo po/%s.po',lang,lang)
	print(cmdline)
  os.execute(cmdline)
end

function update_schema_files()
  local cmdline
  -- generate the lua translation
  cmdline = string.format("java -jar %s/lib/saxon9he.jar -s:%s/schema/translations.xml -o:%s/src/lua/translations.lua -xsl:%s/schema/genluatranslations.xsl",installdir,installdir,installdir,installdir)
  print(cmdline)
  os.execute(cmdline)
  -- generate german schema
  cmdline = string.format("java -jar %s/lib/saxon9he.jar -s:%s/schema/layoutschema-en.rng -o:%s/schema/layoutschema-de.rng -xsl:%s/schema/translate_schema.xsl pFrom=en pTo=de",installdir,installdir,installdir,installdir)
  print(cmdline)
  os.execute(cmdline)
end

function new_language(lang)
	assert(lang,"No language given")
	local cmdline
	lfs.chdir(srcdir)
	cmdline = 'xgettext --from-code="UTF-8" -k"log" -k"err" -k"warning" -s -o po/publisher.pot '.. table.concat(srcfiles," ")
	print(cmdline)
  os.execute(cmdline)
	cmdline = string.format('msginit -l %s -o po/%s.po -i po/publisher.pot',lang,lang)
  print(cmdline)
	os.execute(cmdline)
end

function update_manual( lang )
  cmdline = string.format("mkdoc")
  os.execute(cmdline)
  os.execute(cmdline)
end


local op = optionparser:new()
op.banner = string.format("Usage: sdcontrol <options>")
op.start = 30
op:on("--new-language LANG","Add a new langauge for messages. Example: de_DE",new_language)
op:on("--create-manual [LANG]","-m","Create (update) manual in language LANG. Defaults to 'all', which is currently only 'de'",update_manual)
op:on("-u","--update-translations LANG","Update translation files for source code (gettext). Example: de_DE",update_translation_files)
op:on("--update-schemafiles","Update all files that depend on the RelaxNG schema 'layoutschema-en.rng'",update_schema_files)
local ok, msg = op:parse(arg)
if not ok then
  print(msg)
  os.exit(-1)
end
