<?xml version="1.0" encoding="UTF-8"?>
<commands xmlns="urn:speedata.de:2011/publisher/documentation" xmlns:de="urn:speedata.de:2009/publisher/de">
  <command name="Action">
    <description xml:lang="de">
      <para>Assoziiert eine Aktion mit einem Text. Sobald der Text auf einer Seite platziert wird, wird die dazugehörige Aktion ausgeführt. Die Aktion kann man sich als unsichtbares Zeichen
        vorstellen. Wenn der Publisher das unsichtbare Zeichen ausgibt, werden die Anweisungen in Aktion ausgeführt.</para>
    </description>
    <childelements>
      <cmd name="AddToList" />
    </childelements>
    <parentelements>
      <cmd name="Textblock" />
    </parentelements>
    <example xml:lang="de">
      <listing><![CDATA[<ObjektAusgeben spalte="1">
  <Textblock breite="40">
    <Absatz>
      <Textwert>Artikel: </Textwert><Textwert auswahl="@name" />
    </Absatz>
    <Aktion>
      <ZurListeHinzufügen liste="inhalt" schlüssel="{@name}" auswahl="sd:aktuelle-seite()" />
    </Aktion>
  </Textblock>
</ObjektAusgeben>]]></listing>
    </example>
    <seealso><cmd name="Textblock" /></seealso>
  </command>
<command name="Barcode">
  <description xml:lang="de">
    <para>Erzeugt einen 1D oder 2D Strichcode (barcode), der in <cmd name="PlaceObject"/> ausgegeben werden kann.</para>
  </description>
  <description xml:lang="en">
    <para>Print a 1d or 2d barcode. To be used in <cmd name="PlaceObject"/>.</para>
  </description>
  <childelements/>
  <parentelements>
    <cmd name="PlaceObject"/>
  </parentelements>
  <attribute name="select" type="xpath" optional="no">
    <description xml:lang="de">
      <para>Wert, der als Strichcode kodiert werden soll.</para>
    </description>
    <description xml:lang="en">
      <para>The data to be encoded in the barcode.</para>
    </description>
  </attribute>
  <attribute name="fontface" type="text" optional="yes">
    <description xml:lang="en">
      <para>Name of the fontface of the text that can be placed beneath the barcode. Not used in all codes.</para>
    </description>
    <description xml:lang="de">
      <para>Name der Schriftart des Textes, der ggf. unterhalb des Strichcodes ausgegeben wird. Nicht in allen Codes verwendet.</para>
    </description>
  </attribute>
  <attribute name="type" type="text" optional="no">
    <description xml:lang="en">
      <para>Type of the barcode. One of <tt>EAN13</tt>, <tt>Code128</tt> or <tt>QRCode</tt>.</para>
    </description>
    <description xml:lang="de">
      <para>Typ des Strichcodes. Kann <tt>EAN13</tt>, <tt>Code128</tt> oder <tt>QRCode</tt> sein.</para>
    </description>
  </attribute>
  <attribute name="width" type="numberorlength" optional="yes">
    <description xml:lang="en">
      <para>Width of the barcode</para>
    </description>
    <description xml:lang="de">
      <para>Breite des Strichcodes</para>
    </description>
  </attribute>
  <attribute name="height" type="numberorlength" optional="yes">
    <description xml:lang="en">
      <para>Height of the barcode.</para>
    </description>
    <description xml:lang="de">
      <para>Höhe des Strichcodes.</para>
    </description>
  </attribute>
  <attribute name="showtext" type="yesno" optional="yes">
    <description xml:lang="en">
      <para>Should the text be written under the barcode?</para>
    </description>
    <description xml:lang="de">
      <para>Bestimmt, ob unterhalb des Barcodes der Text erscheint.</para>
    </description>
  </attribute>

  <example xml:lang="en">
    <listing><![CDATA[<PlaceObject>
  <Barcode select="'speedata Publisher'" type="Code 128" showtext="nein"/>
</PlaceObject>]]></listing>
    <listing><![CDATA[<PlaceObject>
  <Barcode select="4242002518169" type="EAN13"/>
</PlaceObject>]]></listing>
  </example>
  <example xml:lang="de">
    <listing><![CDATA[<ObjektAusgeben>
  <Strichcode auswahl="'speedata Publisher'" typ="Code 128" zeigetext="nein"/>
</ObjektAusgeben>]]></listing>
    <listing><![CDATA[<ObjektAusgeben>
  <Strichcode auswahl="4242002518169" typ="EAN13"/>
</ObjektAusgeben>]]></listing>
  </example>
  <seealso></seealso>
</command>
  <command name="Bookmark">
    <description xml:lang="en">
      <para>Create a bookmark for the PDF viewer (e.g. Adobe Reader). When the user clicks on a bookmark, the PDF viewer <quote>jumps</quote> to that place in the document.</para>
    </description>
    <description xml:lang="de">
      <para>Erstellt ein Lesezeichen für den PDF Betrachter (z.B. Adobe Reader). Wenn der Leser auf das Lesezeichen klickt, springt der PDF Betrachter an diese Stelle im Dokument.</para>
    </description>
    <childelements />
    <parentelements>
      <cmd name="Textblock" />
    </parentelements>
    <attribute name="select" type="xpath" optional="no">
      <description xml:lang="de">
        <para>Titel des Lesezeichens</para>
      </description>
    </attribute>
    <attribute name="level" type="number" optional="no">
      <description xml:lang="de">
        <para>Hierarchieebene. 1 ist die höchste Ebene, zwei die nächst tiefere Ebene etc.</para>
      </description>
    </attribute>
    <attribute name="open" type="yesno" optional="yes">
      <description xml:lang="de">
        <para>Bestimmt, ob die Kind-Lesezeichen dargestellt werden sollen oder nicht.</para>
      </description>
    </attribute>
    <example xml:lang="de">
      <listing><![CDATA[<Lesezeichen ebene="1" auswahl="$titel" offen='nein'/>]]></listing>
      <para>Erzeugt ein Lesezeichen der Stufe 1 (höchste Stufe) mit dem Titel, der in der Variablen @titel@ steht.</para>
    </example>
    <seealso>
      <cmd name="Textblock" />
    </seealso>
  </command>
  <command name="Textblock">
    <description xml:lang="de">
      <para>Erzeugt einen rechteckigen Bereich mit Text.</para>
    </description>
    <childelements>
      <cmd name="Paragraph" />
      <cmd name="Action" />
      <cmd name="Copy-of" />
      <cmd name="Bookmark" />
    </childelements>
    <parentelements>
      <cmd name="PlaceObject" />
    </parentelements>
    <attribute name="angle" type="number" optional="yes">
      <description xml:lang="de">
        <para>Winkel (Drehrichtung gegen den Uhrzeigersinn), um der der Text gedreht wird. Die Spalte und die Zeile, in der der Text ausgegeben wird, bleibt gleich, die Breite und die Höhe des Textes
          ändert sich gegenüber dem ursprünglichen Text.</para>
      </description>
    </attribute>
    <attribute name="color" type="text" optional="yes">
      <description xml:lang="de">
        <para>Name der Farbe im Textblock.</para>
      </description>
    </attribute>
    <attribute name="width" type="number" optional="no">
      <description xml:lang="de">
        <para>Anzahl der Spalten, die der Text einnehmen soll.</para>
      </description>
    </attribute>
    <attribute name="fontface" type="text" optional="yes">
      <description xml:lang="de">
        <para>Name der Schriftfamilie, die benutzt werden soll.</para>
      </description>
    </attribute>
    <attribute name="textformat" type="text" optional="yes">
      <description xml:lang="de">
        <para>Name des zu benutzenden Textformats. Wird kein Textformat angegeben, nimmt das System das Textformat <tt>text</tt>.</para>
      </description>
    </attribute>
    <attribute name="columns" type="number" optional="yes">
      <description xml:lang="de">
        <para>Anzahl der Spalten in dem Textblock</para>
      </description>
    </attribute>
    <attribute name="columndistance" type="numberorlength" optional="yes">
      <description xml:lang="de">
        <para>Abstand zwischen zwei Spalten. Voreinstellung: 3mm.</para>
      </description>
    </attribute>
    <remark xml:lang="de">
      <para>Durch die Angabe eines Textformats wird das Aussehen der Absätze beeinflusst. Textformate müssen vorher mit <cmd name="DefineTextformat" /> festgelegt werden. Wenn kein Textformat
        angegeben wird, nimmt das System das Textformat <tt>text</tt>.</para>
    </remark>
    <example xml:lang="de">
      <listing><![CDATA[<ObjektAusgeben spalte="3">
  <Textblock breite="10" winkel="-20">
    <Absatz>
      <B><Wert>Text in Fett</Wert></B>
    </Absatz>
  </Textblock>
</ObjektAusgeben>]]></listing>
    </example>
    <seealso>
      <cmd name="DefineTextformat" />, <cmd name="DefineColor" />, <cmd name="Paragraph" />, <cmd name="PlaceObject" />
    </seealso>
  </command>
  <command name="Paragraph">
    <description xml:lang="de">
      <para>Erzeugt einen Absatz innerhalb eines Textblocks.</para>
    </description>
    <childelements>
      <!-- Textwerte -->
      <cmd name="B" />
      <cmd name="Image" />
      <cmd name="Switch" />
      <cmd name="I" />
      <cmd name="Fontface" />
      <cmd name="Sub" />
      <cmd name="Sup" />
    </childelements>
    <parentelements>
      <cmd name="Textblock" />
    </parentelements>
    <attribute name="color" type="text" optional="yes">
      <description xml:lang="de">
        <para>Farbe des Absatzes. Muss vorher mit <cmd name="DefineColor" /> definiert worden sein.</para>
      </description>
    </attribute>
    <attribute name="textformat" type="text" optional="yes">
      <description xml:lang="de">
        <para>Name des zu benutzenden Textformats. Wird kein Textformat angegeben, nimmt das System das Textformat <tt>text</tt></para>
      </description>
    </attribute>
    <attribute name="fontface" type="text" optional="yes">
      <description xml:lang="de">
        <para>Name der Schriftart.</para>
      </description>
    </attribute>
    <attribute name="language" type="languages" optional="yes">
      <description xml:lang="de">
        <para>Name der Sprache für die Silbentrennung. Gültige Werte: @Deutsch@, @Englisch (Großbritannien)@, @Französisch@.</para>
      </description>
    </attribute>
    <example xml:lang="de">
      <listing><![CDATA[<Textblock breite="27">
  <Absatz schriftart="Überschrift">
    <Wert>Hallo Welt</Wert>
  </Absatz>
</Textblock>
]]></listing>
    </example>
    <example xml:lang="de">
      <listing><![CDATA[<Textblock breite="27">
  <Absatz schriftart="Überschrift" sprache="Deutsch">
    <Wert auswahl="node()"/>
  </Absatz>
  </Textblock>]]></listing>
      <para>wobei in den Daten ein Text steht, beispielsweise falls der aktuelle Knoten das Element <cmd name="Record" /> ist:</para>
      <listing><![CDATA[<datensatz>Produktbeschreibung: die Artikelnummer <i>1234</i> setzt sich aus ... </datensatz>]]></listing>
    </example>
    <seealso><cmd name="Textblock" />, <ref name="fontusage">Einbinden von Schriftarten</ref></seealso>
  </command>
  <command name="Attribute">
    <description xml:lang="de">
      <para>Erzeugt eine Datenstruktur, die mithilfe von <cmd name="SaveDataset" /> auf Festplatte gespeichert werden kann.</para>
    </description>
    <childelements />
    <parentelements>
      <cmd name="Element" />
      <cmd name="SetVariable" />
    </parentelements>
    <attribute name="name" type="text" optional="no">
      <description xml:lang="de">
        <para>Name des Attributs, das erzeugt wird.</para>
      </description>
    </attribute>
    <example xml:lang="de">
      <listing><![CDATA[<Element name="Planetenverzeichnis">
  <Attribut name="name" auswahl=" @name "/>
  <Attribut name="seite" auswahl=" sd:aktuelle-seite()"/>
  </Element>]]></listing>
      <para>Erzeugt diese Datenstruktur:</para>
      <listing><![CDATA[<Planetenverzeichnis name=" (Inhalt von @name) " seite=" (aktuelle Seitennummer) " />]]></listing>
    </example>
    <seealso><cmd name="Element" />, <cmd name="SaveDataset" />, <ref name="lists">Wie werden automatische Verzeichnisse erstellt?</ref></seealso>
  </command>
  <command name="B">
    <description xml:lang="de">
      <para>Schaltet auf »Fett« um.</para>
    </description>
    <childelements>
      <!-- Textwerte -->
      <cmd name="B" />
      <cmd name="Image" />
      <cmd name="Switch" />
      <cmd name="I" />
      <cmd name="Fontface" />
      <cmd name="Sub" />
      <cmd name="Sup" />
    </childelements>
    <parentelements>
      <cmd name="Paragraph" />
    </parentelements>
    <example xml:lang="de">
      <listing><![CDATA[<Textblock spalte="3" breite="10">
  <Absatz>
    <B><Wert>Text in Fett</Wert></B>
  </Absatz>
</Textblock>
]]></listing>
    </example>
    <seealso><cmd name="I" /></seealso>
  </command>
  <command name="AddToList">
    <description xml:lang="de">
      <para>Dieses Kommando kann innerhalb von Aktion benutzt werden. Wenn es ausgeführt wird, wird eine Schlüssel/Wert-Kombination in eine Liste eingefügt. Dieser Befehl ist derzeitig nicht
        vollständig getestet und wird noch überarbeitet.</para>
    </description>
    <childelements />
    <parentelements>
      <cmd name="Action" />
    </parentelements>
    <attribute name="select" type="xpath" optional="no">
      <description xml:lang="de">
        <para>Wert, der in der Liste gespeichert werden soll.</para>
      </description>
    </attribute>
    <attribute name="list" type="text" optional="no">
      <description xml:lang="de">
        <para>Die Liste, in der der Schlüssel bzw. Wert gespeichert wird.</para>
      </description>
    </attribute>
    <attribute name="key" type="text" optional="no">
      <description xml:lang="de">
        <para>Name des Schlüssels, unter der der Wert abrufbar ist.</para>
      </description>
    </attribute>
    <example xml:lang="de">
      <para>Die Liste wird erzeugt, falls sie noch nicht existiert.</para>
      <listing><![CDATA[<ObjektAusgeben spalte="1">
  <Textblock breite="40">
    <Absatz>
      <Textwert>Artikel: </Textwert><Textwert auswahl="@name" />
    </Absatz>
    <Aktion>
      <ZurListeHinzufügen liste="inhalt" schlüssel="{@name}" auswahl="sd:aktuelle-seite()" />
    </Aktion>
  </Textblock>
  </ObjektAusgeben>]]></listing>
      <para>Hier wird der Text ausgegeben und gleichzeitig ein Schlüssel/Wertepaar erzeugt mit dem Inhalt des Attributs name des aktuellen Datensatzes und der aktuellen Seite und in die Liste
          <tt>inhalt</tt> eingefügt.</para>
    </example>
    <seealso><cmd name="Action" /></seealso>
  </command>
  <command name="ProcessRecord">
    <description xml:lang="de">
      <para>Dieser Befehl erlaubt es, eine Liste aus Elementen/Attributen zu verarbeiten.</para>
    </description>
    <childelements />
    <parentelements>
      <cmd name="Record" />
    </parentelements>
    <attribute name="select" type="xpath" optional="no">
      <description xml:lang="de">
        <para>Datensatz, der bearbeitet werden soll</para>
      </description>
    </attribute>
    <example xml:lang="de">
      <listing><![CDATA[<BearbeiteDatensatz auswahl="$artikelnummern"/>]]></listing>
    </example>
    <seealso><cmd name="ProcessNode" /></seealso>
  </command>
  <command name="ProcessNode">
    <description xml:lang="de">
      <para>Bearbeitet alle angegebenen Datensätze. Die Elemente, für die die Regeln ausgeführt werden sollen, werden mit dem Attribut auswahl angegeben.</para>
    </description>
    <description xml:lang="en">
      <para>Executes all given nodes. The elements, that are to be executed, are given with the attribute <tt>selection</tt>.</para>
    </description>
    <childelements />
    <parentelements>
      <cmd name="Record" />
    </parentelements>
    <attribute name="select" type="xpath" optional="no">
      <description xml:lang="de">
        <para>Auswahl der Kindelemente, die verarbeitet werden sollen.</para>
      </description>
      <description xml:lang="en">
        <para>Selection of child elements, that are to be processed.</para>
      </description>
    </attribute>
    <attribute name="mode" type="text" optional="yes">
      <description xml:lang="de">
        <para>Name des Modus. Dieser muss bei <cmd name="Record"/> exakt übereinstimmen. Damit ist es möglich für dasselbe Element unterschiedliche Regeln aufzurufen.</para>
      </description>
      <description xml:lang="en">
        <para>Name of the mode. This must match the mode at the corresponding <cmd name="Record"/> element. With this it is possible to have different rules for the same element.</para>
      </description>
    </attribute>
    <remark xml:lang="en">
      <para>Currently there also exists <cmd name="ProcessRecord"/> that works on a list.</para>
    </remark>
    <remark xml:lang="de">
      <para>Derzeit gibt es auch BearbeiteDatensatz, das auf eine Liste arbeitet.</para>
    </remark>
    <example xml:lang="en">
      <listing><![CDATA[<ProcessNode select="*" mode="sum" />]]></listing>
    </example>
    <example xml:lang="de">
      <listing><![CDATA[<BearbeiteKnoten auswahl="*" modus="summe" />]]></listing>
    </example>
    <seealso><cmd name="Record" />, <cmd name="ProcessRecord" /></seealso>
  </command>
  <command name="AtPageShipout">
    <description xml:lang="de">
      <para>Die innerhalb dieses Befehls definierten Anweisungen werden ausgeführt, sobald die Seite ins PDF ausgegeben wird.</para>
    </description>
    <childelements>
      <cmd name="LoadDataset" />
      <cmd name="SaveDataset" />
      <cmd name="PlaceObject" />
      <cmd name="Switch" />
      <cmd name="While" />
      <cmd name="ProcessRecord" />
      <cmd name="ProcessNode" />
      <cmd name="Message" />
      <cmd name="NextFrame" />
      <cmd name="NewPage" />
      <cmd name="NextRow" />
      <cmd name="EmptyLine" />
      <cmd name="Group" />
      <cmd name="SortSequence" />
      <cmd name="Hyphenation" />
      <cmd name="SetVariable" />
    </childelements>
    <parentelements>
      <cmd name="Pagetype" />
    </parentelements>
    <example xml:lang="de">
      <listing><![CDATA[<BeiSeitenAusgabe>
  <ObjektAusgeben spalte="1">
    <Textblock breite="20">
      <Absatz>
        <Wert auswahl="sd:aktuelle-seite()"/>
      </Absatz>
    </Textblock>
  </ObjektAusgeben>
</BeiSeitenAusgabe>]]></listing>
    </example>
    <seealso><cmd name="AtPageCreation" />, <cmd name="Pagetype" /></seealso>
  </command>
  <command name="AtPageCreation">
    <description xml:lang="de">
      <para>Die Inhalte des Elements »BeiSeitenErzeugung« werden ausgeführt, sobald das erste Mal auf die Seite zugegriffen wird.</para>
    </description>
    <childelements>
      <cmd name="LoadDataset" />
      <cmd name="SaveDataset" />
      <cmd name="PlaceObject" />
      <cmd name="Switch" />
      <cmd name="While" />
      <cmd name="ProcessRecord" />
      <cmd name="ProcessNode" />
      <cmd name="Message" />
      <cmd name="NextFrame" />
      <cmd name="NewPage" />
      <cmd name="NextRow" />
      <cmd name="EmptyLine" />
      <cmd name="Group" />
      <cmd name="SortSequence" />
      <cmd name="Hyphenation" />
      <cmd name="SetVariable" />
    </childelements>
    <parentelements>
      <cmd name="Pagetype" />
    </parentelements>
    <example xml:lang="de">
      <listing><![CDATA[<BeiSeitenErzeugung>
  <ObjektAusgeben spalte="1">
    <Textblock breite="20">
      <Absatz>
        <Wert auswahl="sd:aktuelle-seite()"/>
      </Absatz>
    </Textblock>
  </ObjektAusgeben>
</BeiSeitenErzeugung>]]></listing>
    </example>
    <seealso><cmd name="Pagetype" />, <cmd name="AtPageShipout" /></seealso>
  </command>
  <command name="Image">
    <description xml:lang="de">
      <para>Bindet eine externe Grafik ein. Erlaubte Grafikformate sind PDF (.pdf), PNG (.png) und JPEG (.jpg).</para>
    </description>
    <childelements />
    <parentelements>
      <cmd name="PlaceObject" />
    </parentelements>
    <attribute name="width" type="numberorlength" optional="no">
      <description xml:lang="de">
        <para>Die Breite in Rasterzellen, den das Bild im Raster belegt.</para>
      </description>
    </attribute>
    <attribute name="height" type="numberorlength" optional="yes">
      <description xml:lang="de">
        <para>Die maximale Höhe, die das Bild im Raster belegt.</para>
      </description>
    </attribute>
    <attribute name="file" type="text" optional="no">
      <description xml:lang="de">
        <para>Dateiname des Bildes.</para>
      </description>
    </attribute>
    <attribute name="page" type="number" optional="yes">
      <description xml:lang="de">
        <para>Die Seitenzahl aus dem PDF. Voreinstellung ist 1.</para>
      </description>
    </attribute>
    <attribute name="naturalsize" type="text" optional="yes">
      <description xml:lang="de">
        <para>Die PDF-Box, die den sichtbaren Bereich angibt. Voreinstellung ist »cropbox«.</para>
      </description>
    </attribute>
    <attribute name="maxsize" type="text" optional="yes">
      <description xml:lang="de">
        <para>Die PDF-Box, die die maximale Größe angibt. Voreinstellung ist »cropbox«.</para>
      </description>
    </attribute>
    <remark xml:lang="de">
      <para>Die Werte der Attribute natürliche-größe und maximale-größe können artbox, bleedbox, cropbox, mediabox und trimbox sein. Diese beiden Angaben werden dafür benutzt, um das eingebundene Bild
        für den Anschnitt zu vergrößern. Im zweiten Beispiel unten ist der gewünschte Bildausschnitt in der »artbox« definiert, die Grafik in der PDF-Datei hat aber noch eine Beschnittzugabe, deren
        Ausmaß hier in der »cropbox« beschrieben ist. Die im zweiten Beispiel angegebene Breite entspricht der Papierbreite, so dass das der Inhalt der »artbox« 21cm breit dargestellt wird, der
        Anschnitt um das Bild herum aber weiterhin existiert.</para>
    </remark>
    <example xml:lang="de">
      <listing><![CDATA[<Datensatz element="produktbild">
  <ObjektAusgeben spalte="{ $spalte }">
    <Bild breite="10" datei="{string(.)}" />
  </ObjektAusgeben>
</Datensatz>]]></listing>
      <para>Nimmt den Dateinamen des Bildes aus dem Elementinhalt »produktbild« aus der Datensatzdatei, z.B.</para>
      <listing><![CDATA[<produktbild>grafik.pdf</produktbild>]]></listing>
      <para>Folgendes Beispiel nimmt eine Seite aus einer PDF Datei:</para>
      <listing><![CDATA[<ObjektAusgeben spalte="0mm" zeile="0mm">
  <Bild breite="210mm" datei="katalog.pdf" seite="132" natürliche-größe="artbox" />
</ObjektAusgeben>]]></listing>
    </example>
    <info xml:lang="de">
      <para>Die Anzahl der Seiten in einer PDF-Datei kann mit der XPath-Funktion <tt>sd:anzahl-seiten(&lt;dateiname&gt;)</tt> ermittelt werden.</para>
    </info>
    <seealso><cmd name="PlaceObject" /></seealso>
  </command>
  <command name="Box">
    <description xml:lang="de">
      <para>Erzeugt einen rechteckigen gefärbten Bereich. Die Fläche muss mit den Rasterzellen übereinstimmen.</para>
    </description>
    <childelements />
    <parentelements>
      <cmd name="PlaceObject" />
    </parentelements>
    <attribute name="width" type="number" optional="no">
      <description xml:lang="de">
        <para>Breite der Box in Rasterzellen.</para>
      </description>
    </attribute>
    <attribute name="height" type="number" optional="no">
      <description xml:lang="de">
        <para>Höhe der Box in Rasterzellen.</para>
      </description>
    </attribute>
    <attribute name="backgroundcolor" type="text" optional="no">
      <description xml:lang="de">
        <para>Farbe der Box.</para>
      </description>
    </attribute>
    <example xml:lang="de">
      <listing><![CDATA[<Box breite="5" höhe="2" hintergrundfarbe="Dunkelblau" />]]></listing>
    </example>
    <seealso><cmd name="DefineColor" />, <cmd name="PlaceObject" /></seealso>
  </command>
  <command name="Record">
    <description xml:lang="de">
      <para>Enthält die Anweisungen, die bei dem angegebenen Datensatz ausgeführt werden sollen. Der oberste Datensatz (d.h. direkt unterhalb des Wurzelelements) wird vom Publisher aufgerufen, alle
        nachfolgenden Datensätze müssen über das Element BearbeiteKnoten aufgerufen werden.</para>
    </description>
    <childelements>
      <cmd name="ProcessNode" />
      <cmd name="Switch" />
      <cmd name="Group" />
      <cmd name="LoadDataset" />
      <cmd name="Message" />
      <cmd name="NewPage" />
      <cmd name="SetVariable" />
      <cmd name="SaveDataset" />
      <cmd name="While" />
      <cmd name="PlaceObject" />
      <cmd name="NextRow" />
    </childelements>
    <parentelements>
      <cmd name="Layout" />
    </parentelements>
    <example xml:lang="de">
      <listing><![CDATA[<Datensatz element="url" modus="ausgabe">
  <Textblock breite="27" spalte="2" textformat="text">
    <Absatz>
      <Wert>URL: </Wert>
      <URL>
        <Wert auswahl="." />
      </URL>
    </Absatz>
  </Textblock>
</Datensatz>]]></listing>
    </example>
    <seealso>
      <cmd name="ProcessNode" />
    </seealso>
  </command>
  <command name="DefineColor">
    <description xml:lang="de">
      <para>Definiert Farben, die später im Layout benutzt werden können</para>
    </description>
    <description xml:lang="en">
      <para>Colors defined with DefineColors can be referenced later by their name.</para>
    </description>
    <childelements />
    <parentelements>
      <cmd name="Layout" />
    </parentelements>
    <attribute name="model" type="colormodel" optional="no">
      <description xml:lang="de">
        <para>Das Farbmodell, das benutzt werden soll. Derzeit werdern nur RGB und CMYK unterstützt. Weitere Farbräume auf Anfrage.</para>
      </description>
      <description xml:lang="en">
        <para>Color model to be used for the color. Currently only RGB and CMYK are supported. Send mail for more.</para>
      </description>
    </attribute>
    <attribute name="r" type="zerotohundred" optional="no">
      <description xml:lang="de">
        <para>Rot Anteil bei RGB</para>
      </description>
      <description xml:lang="en">
        <para>Red part with RGB</para>
      </description>
    </attribute>
    <attribute name="g" type="zerotohundred" optional="no">
      <description xml:lang="de">
        <para>Grün Anteil bei RGB</para>
      </description>
      <description xml:lang="en">
        <para>Green part with RGB</para>
      </description>
    </attribute>
    <attribute name="b" type="zerotohundred" optional="no">
      <description xml:lang="de">
        <para>Blau Anteil bei RGB</para>
      </description>
      <description xml:lang="en">
        <para>Blue part with RGB</para>
      </description>
    </attribute>
    <attribute name="c" type="zerotohundred" optional="no">
      <description xml:lang="de">
        <para>Cyan Anteil bei CMYK</para>
      </description>
      <description xml:lang="en">
        <para>Cyan part with CMYK</para>
      </description>
    </attribute>
    <attribute name="m" type="zerotohundred" optional="no">
      <description xml:lang="de">
        <para>Magenta Anteil bei CMYK</para>
      </description>
      <description xml:lang="en">
        <para>Magenta part with CMYK</para>
      </description>
    </attribute>
    <attribute name="y" type="zerotohundred" optional="no">
      <description xml:lang="de">
        <para>Gelb Anteil bei CMYK</para>
      </description>
    </attribute>
    <attribute name="k" type="zerotohundred" optional="no">
      <description xml:lang="de">
        <para>Schwarz (key) Anteil bei CMYK</para>
      </description>
      <description xml:lang="en">
        <para>Black part with CMYK</para>
      </description>
    </attribute>
    <example xml:lang="de">
      <listing><![CDATA[<DefiniereFarbe name="Schwarz" modell="cmyk" c="0" m="0" y="0" k="100"/>
<DefiniereFarbe name="Weiß" modell="rgb" r="100" g="100" b="100"/>]]></listing>
    </example>
    <seealso />
  </command>
  <command name="DefineFontfamily">
    <description xml:lang="de">
      <para>Das Element <cmd name="DefiniereSchriftfamilie" /> definiert eine Schriftfamilie, auf in den Elementen <cmd name="Absatz" />, <cmd name="Textblock" />, <cmd name="Schriftart " /> und <cmd
          name="Tabelle " /> mit dem Attribut <tt>schriftart</tt> zugegriffen werden kann.</para>
    </description>
    <childelements>
      <cmd name="Regular" />
      <cmd name="Italic" />
      <cmd name="Bold" />
      <cmd name="BoldItalic" />
    </childelements>
    <parentelements>
      <cmd name="Layout" />
    </parentelements>
    <attribute name="name" type="text" optional="no">
      <description xml:lang="de">
        <para>Interner Name, unter dem die Schriftfamilie später angesprochen wird.</para>
      </description>
    </attribute>
    <attribute name="fontsize" type="number" optional="no">
      <description xml:lang="de">
        <para>Schriftgröße in pt (PostScript-Punkte, DTP-Punkte).</para>
      </description>
    </attribute>
    <attribute name="leading" type="number" optional="no">
      <description xml:lang="de">
        <para>Abstand zwischen zwei Grundlinien in pt (PostScript-Punkte).</para>
      </description>
    </attribute>
    <remark xml:lang="de">
      <para>Wird keine Schriftart angegeben, dann wird auf die Schriftfamilie text (kleines ‘t’) zurückgegriffen.</para>
      <para>Die Schnitte Fett, Kursiv und FettKursiv müssen nur dann angegeben werden, wenn sie auch benutzt werden. Es wird aber empfohlen, diese anzugeben, damit nicht unbemerkt auf die Standardschriftart umgeschaltet wird.</para>
    </remark>
    <example xml:lang="de">
      <listing><![CDATA[<DefiniereSchriftfamilie name="Helvetica" schriftgröße="12" zeilenabstand="14">
  <Normal schriftart="Helvetica Normal"/>
  <Fett schriftart="Helvetica Fett"/>
  <Kursiv schriftart="Helvetica Kursiv"/>
  <FettKursiv schriftart="Helvetica Fett Kursiv"/>
</DefiniereSchriftfamilie>]]></listing>
      <para>Anschließend kann im Text auf diese Schriftfamilie zugegriffen werden:</para>
      <listing><![CDATA[<Textblock breite="18" spalte="1" schriftart="Helvetica">
  <Absatz>
   ...]]></listing>
    </example>
    <seealso>
      <cmd name="LoadFontfile" />
    </seealso>
  </command>
  <command name="DefineTextformat">
    <description xml:lang="de">
      <para>Definiert ein Textformat. Ein Textformat dient zur Formatierung von Absätzen (Einrückung und Ausrichtung). Auf die definierten Textformate kann im Layout (in den Elementen Absatz und
        Textblock) zurückgegriffen werden.</para>
    </description>
    <childelements />
    <parentelements>
      <cmd name="Layout" />
    </parentelements>
    <attribute name="name" type="text" optional="no">
      <description xml:lang="de">
        <para>Name des Textformats, unter dem es später im Layoutregelwerk angesprochen wird.</para>
      </description>
    </attribute>
    <attribute name="alignment" type="alignment" optional="yes">
      <description xml:lang="de">
        <para>Bestimmt die Formatierung des Textes.</para>
      </description>
    </attribute>
    <attribute name="indentation" type="length" optional="yes">
      <description xml:lang="de">
        <para>Absatzeinzug.</para>
      </description>
    </attribute>
    <attribute name="rows" type="number" optional="yes">
      <description xml:lang="de">
        <para>Anzahl der Zeilen, die eingezogen werden (wenn <tt>einrückung</tt> angegeben ist) bzw. falls die Zahl negativ ist, die Anzahl der Zeilen, die <quote>nicht</quote> eingerückt
          werden.</para>
      </description>
    </attribute>
    <example xml:lang="de">
      <listing><![CDATA[<Layout>
  <DefiniereTextformat name="Text mit Einrückung" ausrichtung="blocksatz" einrückung="1cm" />
  ...
  <Datensatz element="...">
    <Textblock breite="10" spalte="1" textformat="Text mit Einrückung">
      <Absatz>
        <Wert>Text ...</Wert>
      </Absatz>
    </Textblock>
  </Datensatz>
</Layout>]]></listing>
    </example>
    <seealso>
      <cmd name="Textblock" />
      <cmd name="Paragraph" />
    </seealso>
  </command>
  <command name="Element">
    <description xml:lang="de">
      <para>Erzeugt eine Datenstruktur, die mithilfe von <cmd name="SaveDataset" /> auf Festplatte gespeichert werden kann.</para>
    </description>
    <childelements>
      <cmd name="Element" />
      <cmd name="Attribute" />
      <cmd name="Value" />
    </childelements>
    <parentelements>
      <cmd name="Element" />
      <cmd name="SetVariable" />
    </parentelements>
    <attribute name="name" type="text" optional="no">
      <description xml:lang="de">
        <para>Name des Elements, das erzeugt wird</para>
      </description>
    </attribute>
    <example xml:lang="de">
      <listing><![CDATA[<Element name="Planetenverzeichnis">
  <Attribut name="name" auswahl=" @name "/>
  <Attribut name="seite" auswahl=" sd:aktuelle-seite()"/>
</Element>]]></listing>
    </example>
    <seealso>
      <cmd name="Attribute" />
      <cmd name="LoadDataset" />
      <cmd name="SaveDataset" />
    </seealso>
  </command>
  <command name="Case">
    <description xml:lang="de">
      <para>Stellt einen Fall einer <cmd name="Switch" /> dar. Der erste <cmd name="Case" />, der zutrifft, wird ausgeführt. Weitere Fälle werden nicht betrachtet. Wird kein Fall erfüllt, dann wird,
        falls vorhanden, das Element <cmd name="Otherwise" /> ausgeführt.</para>
    </description>
    <childelements>
      <cmd name="B" />
      <cmd name="Image" />
      <cmd name="Switch" />
      <cmd name="I" />
      <cmd name="Fontface" />
      <cmd name="Sub" />
      <cmd name="Sup" />
      <cmd name="U" />
      <cmd name="URL" />
      <cmd name="Value" />
      <cmd name="SetVariable" />
    </childelements>
    <parentelements>
      <cmd name="Switch" />
    </parentelements>
    <attribute name="test" type="xpath" optional="no">
      <description xml:lang="de">
        <para>Für jeden Fall in einer Fallunterscheidung wird überprüft, ob die Bedingung erfüllt ist und bei Übereinstimmung die Kindelemente ausgeführt.</para>
      </description>
    </attribute>
    <example xml:lang="de">
      <para>Siehe das Beispiel bei <cmd name="Switch" />
      </para>
    </example>
    <seealso>
      <cmd name="Switch" />, <cmd name="Otherwise" />
    </seealso>
  </command>
  <command name="ForAll">
    <description xml:lang="en">
      <para>Executes the given commands for all elements in the data XML file that match the contents of the attribute <tt>select</tt>.</para>
    </description>
    <description xml:lang="de">
      <para>Ruft die Kindelemente für alle Daten-Elemente auf, die auf das Muster bei <tt>auswahl</tt> passen.</para>
    </description>
    <childelements>
      <cmd name="B" />
      <cmd name="Image" />
      <cmd name="Switch" />
      <cmd name="I" />
      <cmd name="Fontface" />
      <cmd name="Sub" />
      <cmd name="Sup" />
      <cmd name="U" />
      <cmd name="URL" />
      <cmd name="Value" />
      <cmd name="SetVariable" />
    </childelements>
    <parentelements>
      <cmd name="Table"/>
    </parentelements>
    <attribute name="select" type="xpath" optional="no">
      <description xml:lang="en">
        <para>Selects the child elements from the data XML</para>
      </description>
      <description xml:lang="de">
        <para>Wählt die Kindelemente aus.</para>
      </description>
    </attribute>
    <example xml:lang="de">
      <listing><![CDATA[<Datensatz element="data">
  <ObjektAusgeben>
    <Tabelle breite="10">
      <FürAlle auswahl="eintrag">
        <Tr><Td><Absatz><Wert auswahl="string(.)"></Wert></Absatz></Td></Tr>
      </FürAlle>
    </Tabelle>
  </ObjektAusgeben>
</Datensatz>]]></listing>
      <para>Erzeugt eine Tabellenzeile für alle Elemente <tt>eintrag</tt> im Datensatz <tt>data</tt>. So müsste in etwa ein entsprechender Eintrag in den Daten aussehen:</para>
      <listing><![CDATA[<data>
  <eintrag>a</eintrag>
  <eintrag>b</eintrag>
  <eintrag>c</eintrag>
</data>]]></listing>
    </example>
    <example xml:lang="en">
      <listing><![CDATA[<Record element="data">
  <PlaceObject>
    <Table breite="10">
      <ForAll select="entry">
        <Tr><Td><Paragraph><Value select="string(.)"/></Paragraph></Td></Tr>
      </ForAll>
    </Table>
  </PlaceObject>
</Record>]]></listing>
      <para>Creates a table row for all elements <tt>entry</tt> in the data element <tt>data</tt>. The data XML should look similar to this:</para>
      <listing><![CDATA[<data>
  <entry>a</entry>
  <entry>b</entry>
  <entry>c</entry>
</data>]]></listing>
    </example>
    <seealso><cmd name="Switch"/></seealso>
  </command>
  <command name="Switch">
    <description xml:lang="de">
      <para>Erzeugt eine „Wenn-Dann-Abfrage“. Das heißt, für jedes Kindelement <cmd name="Case" /> wird überprüft, ob die Bedingung erfüllt ist. Wenn ja, dann wird der Inhalt des Kindelements <cmd
          name="Case" /> ausgeführt und die Verarbeitung hinter der Fallunterscheidung fortgesetzt. Wenn keine Bedingung erfüllt wurde und ein Element <cmd name="Otherwise" /> gefunden wurde, wird der
        Inhalt des Elements <cmd name="Otherwise" /> ausgeführt. Durch das frühzeitige Abbrechen werden nachfolgende Fälle nicht weiter untersucht (siehe Beispiel).</para>
    </description>
    <childelements>
      <cmd name="Case" />
      <cmd name="Otherwise" />
    </childelements>
    <parentelements />
    <example xml:lang="de">
      <listing><![CDATA[<Datensatz element="...">
  <Zuweisung variable="zähler" auswahl="3"/>
  <Fallunterscheidung>
    <Fall bedingung=" $zähler &lt; 5">
      <Zuweisung variable="text" auswahl="'Kleiner als 5'" />
    </Fall>
    <Fall bedingung=" $zähler &lt; 20">
      <Zuweisung variable="text" auswahl="'Kleiner als 20'" />
    </Fall>
    <Sonst>
      <Zuweisung variable="text" auswahl="'Größer als oder gleich 20'" />
    </Sonst>
  </Fallunterscheidung>
  <ObjektAusgeben spalte="1">
    <Textblock breite="20">
      <Absatz><Wert auswahl="$text" /></Absatz>
    </Textblock>
  </ObjektAusgeben>
</Datensatz>]]></listing>
    </example>
    <info xml:lang="de">
      <para>»Größer« und »kleiner« Vergleiche müssen nach den Regeln von XML kodiert werden. Für »größer« kann das > Zeichen oder &amp;gt; benutzt werden, »kleiner« muss zwingend als &amp;lt;
        ausgeschrieben sein, da das Zeichen &lt; nicht in einem XML Attribut vorkommen darf.</para>
      <para>Eine Fallunterscheidung kann in fast allen Elementen vorkommen. Das Ergebnis der Fallunterscheidung (also vom benutzten Element Fall oder Sonst) wird an das umgebende Element
        zurückgegeben. So wird beispielsweise aus</para>
      <listing><![CDATA[<Td>
  <Absatz>
    <Fallunterscheidung>
      <Fall bedingung=" $zeile > 10 ">
       <Wert>Zeile ist größer als 10</Wert>
      </Fall>
      <Sonst>
        <Wert>Zeile ist kleiner oder gleich 10</Wert>
      </Sonst>
    </Fallunterscheidung>
  </Absatz>
</Td>]]></listing>
      <listing><![CDATA[<Td>
  <Absatz>
    <Wert>Zeile ist größer als 10</Wert>
  </Absatz>
</Td>
]]></listing>
      <para>oder</para>
      <listing><![CDATA[<Td>
  <Absatz>
    <Wert>Zeile ist kleiner oder gleich 10</Wert>
  </Absatz>
</Td>]]></listing>
      <para>je nach Inhalt der Variablen.</para>
    </info>
    <seealso>
      <cmd name="Case" />
      <cmd name="Otherwise" />
    </seealso>
  </command>
  <command name="Bold">
    <description xml:lang="de">
      <para>Name der Schriftart, die für den Schriftschrift Fett benutzt werden soll.</para>
    </description>
    <childelements />
    <parentelements>
      <cmd name="DefineFontfamily" />
    </parentelements>
    <attribute name="fontface" type="text" optional="no">
      <description xml:lang="de">
        <para>Name der Schriftart, die für eine fette Schrift benutzt werden soll.</para>
      </description>
    </attribute>
    <example xml:lang="de">
      <listing><![CDATA[<LadeSchriftdatei name="Helvetica" dateiname="helvetica-regular.otf" />
...

<DefiniereSchriftfamilie name="text" schriftgröße="12" zeilenabstand="14">
  <Normal     schriftart="Times"/>
  <Fett       schriftart="Times Fett"/>
  <Kursiv     schriftart="Times Kursiv"/>
  <FettKursiv schriftart="Times Fett Kursiv"/>
</DefiniereSchriftfamilie>]]></listing>
    </example>
    <seealso>
      <cmd name="B" />, <cmd name="BoldItalic" />, <cmd name="Regular" />, <cmd name="Italic" />
    </seealso>
  </command>
  <command name="BoldItalic">
    <description xml:lang="de">
      <para>Name der Schriftart, die für den Schriftschrift Fett-Kursiv benutzt werden soll.</para>
    </description>
    <childelements />
    <parentelements>
      <cmd name="DefineFontfamily" />
    </parentelements>
    <attribute name="fontface" type="text" optional="no">
      <description xml:lang="de">
        <para>Name der Schriftart, die für eine Fett/Kursive Schrift benutzt werden soll.</para>
      </description>
    </attribute>
    <example xml:lang="de">
      <listing><![CDATA[<LadeSchriftdatei name="Helvetica" dateiname="helvetica-regular.otf" />
...

<DefiniereSchriftfamilie name="text" schriftgröße="12" zeilenabstand="14">
  <Normal     schriftart="Times"/>
  <Fett       schriftart="Times Fett"/>
  <Kursiv     schriftart="Times Kursiv"/>
  <FettKursiv schriftart="Times Fett Kursiv"/>
</DefiniereSchriftfamilie>]]></listing>
    </example>
    <seealso>
      <cmd name="B" />
      <cmd name="I" />
      <cmd name="BoldItalic" />
      <cmd name="Regular" />
      <cmd name="Bold" />
    </seealso>
  </command>
  <command name="Group">
    <description xml:lang="de">
      <para>Erzeugt einen virtuellen Bereich, in dem Elemente platziert werden können. Ausgegeben werden die Gruppen anschließend mit <cmd name="PlaceObject" />.</para>
    </description>
    <childelements>
      <cmd name="Contents" />
    </childelements>
    <parentelements>
      <cmd name="Record" />
    </parentelements>
    <attribute name="name" type="text" optional="no">
      <description xml:lang="de">
        <para>Der Name der anzulegenden Gruppe.</para>
      </description>
    </attribute>
    <example xml:lang="de">
      <listing><![CDATA[<Gruppe name="Beispielgruppe">
  <Inhalt>
    <ObjektAusgeben spalte="3" zeile="2">
      <Textblock breite="14">
        <Absatz>
          <Wert>Text</Wert>
        </Absatz>
      </Textblock>
    </ObjektAusgeben>
    <ObjektAusgeben spalte="2" zeile="4">
      <Textblock breite="14">
        <Absatz>
          <Wert>Nächster Text</Wert>
        </Absatz>
      </Textblock>
    </ObjektAusgeben>
  </Inhalt>
</Gruppe>
<ObjektAusgeben gruppenname="Beispielgruppe" spalte="1" zeile="1" />]]></listing>
    </example>
    <seealso>
      <cmd name="PlaceObject" />
      <cmd name="Contents" />
    </seealso>
  </command>
  <command name="I">
    <description xml:lang="de">
      <para>Schaltet auf »Kursiv« um.</para>
    </description>
    <childelements>
      <cmd name="B" />
      <cmd name="Image" />
      <cmd name="Switch" />
      <cmd name="I" />
      <cmd name="Fontface" />
      <cmd name="Sub" />
      <cmd name="Sup" />
    </childelements>
    <parentelements>
      <cmd name="Paragraph" />
    </parentelements>
    <example xml:lang="de">
      <listing><![CDATA[<Textblock spalte="3" breite="10">
  <Absatz>
    <I><Wert>Kursiver Text</Wert></I>
  </Absatz>
</Textblock>]]></listing>
    </example>
    <seealso><cmd name="B" /></seealso>
  </command>
  <command name="Include">
    <description xml:lang="de">
      <para>Bindet andere Layoutregelwerke ein.</para>
    </description>
    <description xml:lang="en">
      <para>Includes other layout files.</para>
    </description>
    <childelements>
      <cmd name="Record" />
      <cmd name="SetVariable" />
      <cmd name="Hyphenation" />
      <cmd name="SetGrid" />
      <cmd name="Pagetype" />
      <cmd name="Options" />
      <cmd name="LoadFontfile" />
      <cmd name="DefineColor" />
      <cmd name="DefineFontfamily" />
      <cmd name="Pageformat" />
      <cmd name="DefineTextformat" />
    </childelements>
    <parentelements>
      <cmd name="Layout" />
    </parentelements>
    <example xml:lang="de">
      <para>Die Hauptdatei</para>
      <listing><![CDATA[<Layout xmlns="urn:speedata.de:2009/publisher/de"
       xmlns:xi="http://www.w3.org/2001/XInclude">
 <xi:include href="fontdefinitionen.xml" />
 ...]]></listing>
      <para>Die Datei <tt>fontdefinitionen.xml</tt>:</para>
      <listing><![CDATA[<Include xmlns="urn:speedata.de:2009/publisher/de">
  <LadeSchriftdatei name="Helvetica" 
                    dateiname="texgyreheros-regular.otf"/>
  <LadeSchriftdatei name="Helvetica Fett"
                    dateiname="texgyreheros-bold.otf"/>
  <LadeSchriftdatei name="Helvetica Kursiv"
                    dateiname="texgyreheros-italic.otf"/>
  <LadeSchriftdatei name="Helvetica Fett Kursiv"
                    dateiname="texgyreheros-bolditalic.otf"/>
</Include>]]></listing>
    </example>
    <seealso>
      <cmd name="Layout" />
    </seealso>
  </command>
  <command name="Contents">
    <description xml:lang="de">
      <para>Kennzeichnet den Inhalt einer <cmd name="Group" />.</para>
    </description>
    <childelements>
      <cmd name="PlaceObject" />
    </childelements>
    <parentelements>
      <cmd name="Group" />
    </parentelements>
    <remark xml:lang="de">
      <para>Der Inhalt wird in einem extra Element gekapselt, damit die Gruppe später noch andere Elemente (z.B. Raster) beinhalten kann, ohne, dass die Angaben zu unübersichtlich werden. Das
        Inhalt-Element wird voraussichtlich in zukünftigen Versionen wegfallen.</para>
    </remark>
    <example xml:lang="de">
      <listing><![CDATA[<Gruppe name="Beispielgruppe">
  <Inhalt>
    <ObjektAusgeben spalte="3" zeile="2">
      <Textblock breite="14">
        <Absatz>
          <Wert>Text</Wert>
        </Absatz>
      </Textblock>
    </ObjektAusgeben>
    <ObjektAusgeben spalte="2" zeile="4">
      <Textblock breite="14">
        <Absatz>
          <Wert>Nächster Text</Wert>
        </Absatz>
      </Textblock>
    </ObjektAusgeben>
  </Inhalt>
</Gruppe>
<ObjektAusgeben gruppenname="Beispielgruppe" spalte="1" zeile="1"/>]]></listing>
    </example>
    <seealso><cmd name="Group" /></seealso>
  </command>
  <command name="Copy-of">
    <description xml:lang="de">
      <para>Ersetzt das Element Kopie-von mit Inhalt von <tt>auswahl</tt> als Elementstruktur. Dient zum „Zusammenbauen“ von Texten und Tabellen.</para>
    </description>
    <childelements />
    <parentelements />
    <example xml:lang="de">
      <listing><![CDATA[<Zuweisung variable="$meinabsatz" >
  <Absatz>
    <Wert auswahl="@name"/><Wert>, Symbol=</Wert><Wert auswahl="@symbol" />
  </Absatz>
</Zuweisung>
  
<Textblock breite="14" schriftart="text">
    <Kopie-von auswahl="$meinabsatz" />
</Textblock>]]></listing>
      <para>Ist dasselbe wie</para>
      <listing><![CDATA[<Textblock breite="14" schriftart="text">
  <Absatz>
    <Wert auswahl="@name"/><Wert>, Symbol=</Wert><Wert auswahl="@symbol" />
  </Absatz>
</Textblock>]]></listing>
      <para>nur mit dem Unterschied, dass der Inhalt vom Absatz (<tt>@name</tt>, <tt>@symbol</tt>) ermittelt werden kann, bevor der Text ausgegeben wird. Die Zuweisung und die Textausgabe können in
        verschiedenen Regeln stehen.</para>
    </example>
    <seealso><cmd name="Value" />, XPath-Expression <cmd name="SetVariable" /></seealso>
  </command>
  <command name="Italic">
    <description xml:lang="de">
      <para>Dient als Festlegung des Schriftschnittes, wenn Formatierung I (Kursiv) angegeben ist.</para>
    </description>
    <childelements />
    <parentelements>
      <cmd name="DefineFontfamily" />
    </parentelements>
    <attribute name="fontface" type="text" optional="no">
      <description xml:lang="de">
        <para>Name der Schriftart, die für eine kursive Schrift benutzt werden soll.</para>
      </description>
    </attribute>
    <example xml:lang="de">
      <listing><![CDATA[<LadeSchriftdatei name="Helvetica" dateiname="helvetica-regular.otf" />
...

<DefiniereSchriftfamilie name="text" schriftgröße="12" zeilenabstand="14">
  <Normal     schriftart="Helvetica"/>
  <Fett       schriftart="Helvetica Fett"/>
  <Kursiv     schriftart="Helvetica Kursiv"/>
  <FettKursiv schriftart="Helvetica Fett Kursiv"/>
</DefiniereSchriftfamilie>]]></listing>
    </example>
    <seealso>
      <cmd name="Bold" />
      <cmd name="Regular" />
      <cmd name="I" />
      <cmd name="BoldItalic" />
    </seealso>
  </command>
  <command name="LoadDataset">
    <description xml:lang="de">
      <para>Lädt eine Datensatzdatei, die in einem vorherigen Durchlauf des Publishers erzeugt wurde. Die »normale« Verarbeitung des Layoutregelwerks wird unterbrochen und mit dem Inhalt der
        Datensatzdatei fortgeführt. Nachdem die Verarbeitung der neu geladenen Datensatzdatei beendet ist, wird die Verarbeitung des Layoutregelwerks mit dem ursprünglichen Datensatz fortgesetzt. Eine
        ausführlichere Erläuterung findet sich im Abschnitt über automatisch generierte Verzeichnisse.</para>
    </description>
    <childelements />
    <parentelements>
      <cmd name="Record" />
    </parentelements>
    <attribute name="name" type="text" optional="no">
      <description xml:lang="de">
        <para>Name der Dateisatzdatei. Beispiel: toc</para>
      </description>
    </attribute>
    <example xml:lang="de">
      <listing><![CDATA[<Datensatz element="planeten">
  <Zuweisung variable="spalte" auswahl="2" />
  <LadeDatensatzdatei name="toc"/>
  <Zuweisung variable="Inhalt" auswahl="''"/>
  <NeueSeite/>
  <BearbeiteKnoten auswahl="planet"/>
</Datensatz>]]></listing>
    </example>
    <seealso>
      <cmd name="Element" />
      <cmd name="Attribute" />
      <cmd name="SaveDataset" /> Wie werden automatische Verzeichnisse erstellt? </seealso>
  </command>
  <command name="LoadFontfile">
    <description xml:lang="de">
      <para>Das Element LadeSchriftdatei weist einer physikalischen Schriftdatei einem internen Namen zu.</para>
    </description>
    <childelements />
    <parentelements>
      <cmd name="Layout" />
    </parentelements>
    <attribute name="name" type="text" optional="no">
      <description xml:lang="de">
        <para>Der interne Name, unter dem die Schriftart im Element DefiniereSchriftfamilie angesprochen wird.</para>
      </description>
    </attribute>
    <attribute name="filename" type="text" optional="no">
      <description xml:lang="de">
        <para>Der Dateiname mit Endung, ohne Pfad.</para>
      </description>
    </attribute>
    <attribute name="space" type="zerotohundred" optional="yes">
      <description xml:lang="de">
        <para>Natürliche Breite des Leerraums zwischen zwei Wörtern. Dieser darf um 30% gestreckt und um 10% gestaucht werden. Die Voreinstellung ist 25.</para>
      </description>
    </attribute>
    <attribute name="marginprotrusion" type="zerotohundred" optional="yes">
      <description xml:lang="de">
        <para>Angabe in Prozent, um wie viel die Zeichen -, . und , über den Rand herausragen. Stark Schriftartabhängig.</para>
      </description>
    </attribute>
    <attribute name="smallcaps" type="yesno" optional="yes">
      <description xml:lang="de">
        <para>Schalter, ob die Schriftart als Kapitälchen dargestellt werden soll.</para>
      </description>
    </attribute>
    <example xml:lang="de">
      <listing><![CDATA[<LadeSchriftdatei name="Helvetica" dateiname="texgyreheros-regular.otf" />
<LadeSchriftdatei name="Helvetica Fett" dateiname="texgyreheros-bold.otf" />
<LadeSchriftdatei name="Helvetica Kursiv" dateiname="texgyreheros-italic.otf" />
<LadeSchriftdatei name="Helvetica Fett Kursiv" dateiname="texgyreheros-bolditalic.otf" />]]></listing>
    </example>
    <seealso>
      <cmd name="DefineFontfamily" /> Einbinden von Schriftarten </seealso>
  </command>
  <command name="Layout">
    <description xml:lang="de">
      <para>Das <cmd name="Layout" />Element ist das Wurzelelement im Regelwerk.</para>
    </description>
    <childelements>
      <cmd name="Dataset" />
      <cmd name="LoadFontfile" />
      <cmd name="DefineColor" />
      <cmd name="DefineFontfamily" />
      <cmd name="DefineTextformat" />
      <cmd name="Include" />
      <cmd name="Pageformat" />
      <cmd name="Options" />
      <cmd name="Pagetype" />
      <cmd name="SetGrid" />
      <cmd name="Hyphenation" />
      <cmd name="SetVariable" />
    </childelements>
    <parentelements />
    <example xml:lang="de">
      <para>Nachfolgend ein vollständiges Beispiel für ein Layoutregelwerk.</para>
      <listing><![CDATA[<Layout xmlns="urn:speedata.de:2009/publisher/de">
  <Optionen
     zeige_rasterbelegung="nein"
     zeichne_raster="ja"
    />
 
  <LadeSchriftdatei name="Helvetica Fett" dateiname="texgyreheros-bold.otf" />
   
  <DefiniereSchriftfamilie name="Überschrift" schriftgröße="12"
                           zeilenabstand="16">
    <Normal schriftart="Helvetica Fett" />
  </DefiniereSchriftfamilie>
   
  <Seitenformat breite="150mm" höhe="200mm" />
  <SetzeRaster breite="4mm" höhe="14pt" />
  
  <DefiniereTextformat name="text" ausrichtung="blocksatz" />
  
  <Seitentyp name="rechte Seite" bedingung="sd:ungerade(sd:aktuelle-seite())">
    <Rand links="2cm" rechts="1cm" oben="1cm" unten="1cm" />
  </Seitentyp>
  
  <Seitentyp name="linke Seite" bedingung="sd:gerade(sd:aktuelle-seite())">
    <Rand links="1cm" rechts="2cm" oben="1cm" unten="1cm" />
  </Seitentyp>
  
  <Datensatz element="Produkt">
    <Zuweisung variable="spalte" wert="2" />
    <ObjektAusgeben spalte="1">
      <Textblock breite="14" schriftart="Überschrift">
        <Absatz>
          <Wert auswahl="@name"/>
        </Absatz>
      </Textblock>
    </ObjektAusgeben>
    <BearbeiteKnoten auswahl="produktbild" />
    <NeueSeite />
  </Datensatz>
  
  <Datensatz element="produktbild">
    <NeueZeile/>
    <NeueZeile/>
    <ObjektAusgeben spalte="1">
      <Bild breite="10" datei="{string(.)}"/>
    </ObjektAusgeben>
  </Datensatz>
</Layout>]]></listing>
    </example>
    <seealso>
      <cmd name="Include" />
    </seealso>
  </command>
  <command name="EmptyLine">
    <description xml:lang="de">
      <para>Erzeugt eine leere (Raster-)Zeile. Ausgehend von der aktuellen Zeile wird die nächste freie Zeile gesucht. Das nächste Objekt wird in der nächsten Zeile ausgegeben.</para>
    </description>
    <childelements />
    <parentelements />
    <example xml:lang="de">
      <listing><![CDATA[<ObjektAusgeben spalte="1">
  <Bild breite="5" datei="cow.pdf"/>
</ObjektAusgeben>
<Leerzeile />
<ObjektAusgeben spalte="2">
  <Bild breite="3" datei="cow.pdf"/>
</ObjektAusgeben>]]></listing>
    </example>
    <seealso>
      <cmd name="NextRow" />
    </seealso>
  </command>
  <command name="Rule">
    <description xml:lang="de">
      <para>Zeichnet eine horizontale oder vertikale Linie im Raster.</para>
    </description>
    <childelements />
    <parentelements>
      <cmd name="PlaceObject" />
    </parentelements>
    <attribute name="direction" type="horizontalvertical" optional="no">
      <description xml:lang="de">
        <para>Bestimmt die Ausrichtung der Linie.</para>
      </description>
    </attribute>
    <attribute name="rulewidth" type="numberorlength" optional="yes">
      <description xml:lang="de">
        <para>Dicke der Linie in Rasterzellen oder als absolute Angabe.</para>
      </description>
    </attribute>
    <attribute name="length" type="numberorlength" optional="no">
      <description xml:lang="de">
        <para>Länge der Linie in Rasterzellen oder als absolute Angabe.</para>
      </description>
    </attribute>
    <attribute name="color" type="text" optional="yes">
      <description xml:lang="de">
        <para>Farbe der Linie. Vorgabe: Schwarz</para>
      </description>
    </attribute>
    <example xml:lang="de">
      <listing><![CDATA[]]></listing>
    </example>
    <seealso>
      <cmd name="PlaceObject" />
    </seealso>
  </command>
  <command name="Message">
    <description xml:lang="de">
      <para>Gibt eine Textmeldung auf der Konsole und in der Protokolldatei aus.</para>
    </description>
    <childelements>
      <cmd name="Value" />
    </childelements>
    <parentelements>
      <cmd name="Record" />
    </parentelements>
    <attribute name="select" type="xpath" optional="yes">
      <description xml:lang="de">
        <para>Inhalt der Nachricht. Alternativ dazu: Kindelemente Wert innerhalb des Elements »<cmd name="Message" />«</para>
      </description>
    </attribute>
    <example xml:lang="de">
      <listing><![CDATA[<Datensatz element="Datensatz">
  <Nachricht>
    <Wert>Attribut Preis: </Wert>
    <Wert auswahl="@Preis"></Wert>
  </Nachricht>
</Datensatz>]]></listing>
    </example>
    <seealso> </seealso>
  </command>
  <command name="NextFrame">
    <description xml:lang="de">
      <para>Schaltet auf den nächsten freien Rahmen eines Platzierungsbereichs um</para>
    </description>
    <childelements />
    <parentelements>
      <cmd name="AtPageShipout" />
      <cmd name="AtPageCreation" />
      <cmd name="Record" />
    </parentelements>
    <attribute name="area" type="text" optional="no">
      <description xml:lang="de">
        <para>Name des Platzierungsbereich, in dem der nächste Rahmen gesucht werden soll.</para>
      </description>
    </attribute>
    <example xml:lang="de">
      <listing><![CDATA[<Datensatz element="artikel">
  <NächsterRahmen bereich="Titel" />
</Datensatz>]]></listing>
    </example>
    <seealso>
      <cmd name="PositioningArea" />
      <cmd name="PositioningFrame" />
    </seealso>
  </command>
  <command name="NewPage">
    <description xml:lang="de">
      <para>Beendet die Ausgabe auf der aktuellen Seite und erzeugt eine neue Seite. Diese wird nur angelegt, wenn später Text o.ä. ausgegeben wird.</para>
    </description>
    <childelements />
    <parentelements>
      <cmd name="Record" />
    </parentelements>
    <example xml:lang="de">
      <listing><![CDATA[
<Datensatz element="Produktbeschreibung">
  <Textblock breite="10" spalte="1">
    <Absatz>
      <Wert>Text ...</Wert>
    </Absatz>
  </Textblock>
  
  <NeueSeite />
  
</Datensatz>]]></listing>
    </example>
    <seealso />
  </command>
  <command name="NextRow">
    <description xml:lang="de">
      <para>Der virtuelle Cursor wird auf die nächste freie Zeile gesetzt.</para>
    </description>
    <childelements />
    <parentelements>
      <cmd name="Record" />
    </parentelements>
    <attribute name="area" type="text" optional="yes">
      <description xml:lang="de">
        <para>Name des Bereichs, in dem der Cursor bewegt wird.</para>
      </description>
    </attribute>
    <attribute name="row" type="number" optional="yes">
      <description xml:lang="de">
        <para>Zeile für den virtuellen Cursor. Wird keine Zeile angegeben, dann sucht sich der Publisher selbständig eine freie Zeile (ggf. auf einer neuen Seite oder in einem neuen
          Platzierungsrahmen).</para>
      </description>
    </attribute>
    <attribute name="rows" type="number" optional="yes">
      <description xml:lang="de">
        <para>Anzahl der Zeilen, die frei gehalten werden sollen. Vorgabe: 1.</para>
      </description>
    </attribute>
    <example xml:lang="de">
      <listing><![CDATA[<Datensatz element="bild">
  <NeueZeile zeile="5" />
  <ObjektAusgeben spalte="{$spalte}">
    <Bild breite="10" datei="{.}" />
  </ObjektAusgeben>
</Datensatz>]]></listing>
    </example>
    <seealso>
      <cmd name="Leerzeile" />
    </seealso>
  </command>
  <command name="Regular">
    <description xml:lang="de">
      <para>Dient als Festlegung des Schriftschnittes, wenn keine Formatierung angegeben ist.</para>
    </description>
    <childelements />
    <parentelements>
      <cmd name="DefineFontfamily" />
    </parentelements>
    <attribute name="fontface" type="text" optional="yes">
      <description xml:lang="de">
        <para>Name der Schriftdatei, die geladen werden soll.</para>
      </description>
    </attribute>
    <example xml:lang="de">
      <listing><![CDATA[<LadeSchriftdatei name="Helvetica" dateiname="helvetica-regular.otf" />
...

<DefiniereSchriftfamilie name="text" schriftgröße="12" zeilenabstand="14">
  <Normal     schriftart="Helvetica"/>
  <Fett       schriftart="Helvetica Fett"/>
  <Kursiv     schriftart="Helvetica Kursiv"/>
  <FettKursiv schriftart="Helvetica Fett Kursiv"/>
</DefiniereSchriftfamilie>]]></listing>
    </example>
    <seealso>
      <cmd name="Bold" />
      <cmd name="Italic" />
      <cmd name="BoldItalic" />
    </seealso>
  </command>
  <command name="PlaceObject">
    <description xml:lang="de">
      <para>Gibt ein rechteckiges Objekt (Bild, Tabelle, Box oder Textblock) aus.</para>
    </description>
    <description xml:lang="en">
      <para>Outputs a rectangular object (image, table, box or textblock).</para>
    </description>
    <childelements>
      <cmd name="Image" />
      <cmd name="Box" />
      <cmd name="Tablerule" />
      <cmd name="Table" />
      <cmd name="Textblock" />
      <cmd name="Barcode"/>
    </childelements>
    <parentelements>
      <cmd name="Record" />
    </parentelements>
    <attribute name="allocate" type="yesnoauto" optional="yes">
      <description xml:lang="de">
        <para>Bestimmt, ob im Raster der Platz für das Objekt als »belegt« markiert wird. Bei belegen=“nein” wird auch die aktuelle Zeile im Raster nicht verändert. Bei “auto” wird bei Bildern der
          Bildumriss beachtet, sofern eine Umrissdatei vorliegt. Siehe die Beschreibung bei Bild</para>
      </description>
      <description xml:lang="en">
        <para>Determines if the area of the object is marked as »allocated«. With allocate="no", the cursor position is not changed.</para>
      </description>
    </attribute>
    <attribute name="area" type="text" optional="yes">
      <description xml:lang="de">
        <para>Name des Bereichs (Platzierungsbereich), in dem das Objekt ausgegeben werden soll. Wird kein Bereich angegeben, so wird das Objekt auf der »Seite« (dem Bereich, der alle Rasterkästen
          beinhaltet) ausgegeben.</para>
      </description>
      <description xml:lang="en">
        <para>Name of the (positioning) area, the ojbect is placed in. If no area is given, the object is placed on the main area, the page (this is the area that contains all grid cells).</para>
      </description>
    </attribute>
    <attribute name="groupname" type="text" optional="yes">
      <description xml:lang="de">
        <para>Wenn eine Gruppe ausgegeben werden soll, muss der Name hier angegeben werden.</para>
      </description>
    </attribute>
    <attribute name="background" type="solidwithout" optional="yes">
      <description xml:lang="de">
        <para>Es wird ein durchgezogener Rahmen um das Objekt gezeichnet. Zusätzlich muss die Rahmenfarbe angegeben werden. “ohne”: Es wird kein Rahmen gezeichnet.</para>
      </description>
      <description xml:lang="en">
        <para>Draw a solid frame around the object.</para>
      </description>
    </attribute>
    <attribute name="framecolor" type="text" optional="yes">
      <description xml:lang="de">
        <para>Die Farbe des Rahmens, wenn ein Rahmen ausgegeben wird. Nur sinnvoll zusammen mit dem Attribut rahmen.</para>
      </description>
      <description xml:lang="en">
        <para>The color of the frame around the object. Only makes sense in combination with the attribute 'frame'.</para>
      </description>
    </attribute>
    <attribute name="rulewidth" type="length" optional="yes">
      <description xml:lang="de">
        <para>Die Dicke des Rahmnes, der um das Objekt gezogen wird. Nur sinnvoll zusammen mit dem Attribut rahmen.</para>
      </description>
      <description xml:lang="en">
        <para>The thickness of the frame that is drawn around the object. Only makes sense in combination with the attribute 'frame'.</para>
      </description>
    </attribute>
    <attribute name="column" type="numberorlength" optional="yes">
      <description xml:lang="de">
        <para>Zahl: Die Zeile im Raster, in der das Objekt ausgegeben wird. Wird die Zeile nicht angegeben, so sucht sich das System selbständig eine passende freie Zeile für das Objekt. Maßangabe:
          die Position von der oberen Blattkante.</para>
      </description>
    </attribute>
    <attribute name="row" type="numberorlength" optional="yes">
      <description xml:lang="de">
        <para>Zahl: Die Zeile im Raster, in der das Objekt ausgegeben wird. Wird die Zeile nicht angegeben, so sucht sich das System selbständig eine passende freie Zeile für das Objekt. Maßangabe:
          die Position von der oberen Blattkante.</para>
      </description>
    </attribute>
    <attribute name="maxheight" type="number" optional="yes">
      <description xml:lang="de">
        <para>Die maximale Höhe in Rasterzellen, die das Objekt belegen darf. Wird nur für den automatischen Tabellenumbruch benötigt. Die umbrochenen Tabellen auf den Folgeseiten haben maximal die
          angegebene Höhe.</para>
      </description>
    </attribute>
    <attribute name="valign" type="topmiddlebottom" optional="yes">
      <description xml:lang="de">
        <para>Wird ein Objekt ausgegeben, das kein Vielfaches der Rasterhöhe ist, dann gibt das Attribut die vertikale Ausrichtung an. Bottom beispielsweise bedeutet, dass der freie Platz oberhalb des
          Objekts bleibt. Voreinstellung ist “top”.</para>
      </description>
    </attribute>
    <attribute name="hreference" type="leftright" optional="yes">
      <description xml:lang="de">
        <para>Bestimmt, ob die angegebene Spalte die linke oder die rechte Kante vom Objekt bezeichnet.</para>
      </description>
    </attribute>
    <example xml:lang="de">
      <listing><![CDATA[<Datensatz element="bild">
  <ObjektAusgeben spalte="$spalte" rahmen="durchgezogen" rahmenfarbe="Rot">
    <Bild breite="10" datei="." />
  </ObjektAusgeben>
</Datensatz>]]></listing>
      <para>Absolute Platzierung:</para>
      <listing><![CDATA[<Datensatz element="bild">
  <ObjektAusgeben spalte="1cm" zeile="4cm" rahmen="durchgezogen" rahmenfarbe="Rot">
    <Bild breite="10" datei="." />
  </ObjektAusgeben>
</Datensatz>]]></listing>
    </example>
    <info xml:lang="de">
      <para>Die Ausgabe kann entweder im Raster erfolgen (Angabe bei zeile und spalte ist eine Zahl) oder als absolute Positionierung (die Angaben bei zeile und spalte müssen beide vorhanden sein und
        eine Maßgangabe sein).</para>
    </info>
    <seealso>
      <cmd name="Image" />
      <cmd name="Box" />
      <cmd name="Tablerule" />
      <cmd name="Table" />
      <cmd name="Textblock" />
      <cmd name="DefineColor" />
    </seealso>
  </command>
  <command name="Options">
    <description xml:lang="de">
      <para>Setzt Publisher-spezifische Optionen.</para>
    </description>
    <childelements />
    <parentelements>
      <cmd name="Layout" />
    </parentelements>
    <attribute name="cutmarks" type="yesno" optional="yes">
      <description xml:lang="de">
        <para>Beschnittmarken (crop marks) werden ausgegeben. Der Abstand der Schnittmarken vom gedachten Mittelpunkt ergibt sich durch die Beschnittzugabe, mindestens beträgt sie jedoch 5pt. Die
          Länge der Schnittmarke ist 1cm. Voreinstellung ist nein, d.h. es werden keine Schnittmarken ausgegeben.</para>
      </description>
    </attribute>
    <attribute name="trim" type="length" optional="yes">
      <description xml:lang="de">
        <para>Die Größe des Beschnitts (bleed). Voreinstellung ist 0mm.</para>
      </description>
    </attribute>
    <attribute name="mainlanguage" type="text" optional="yes">
      <description xml:lang="de">
        <para>Die Sprache (Silbentrennung), die im Text benutzt wird, wenn keine andere Sprache angegeben ist.</para>
      </description>
    </attribute>
    <attribute name="trace" type="yesno" optional="yes">
      <description xml:lang="de">
        <para>Erzeugt zusätzliche Ausgaben in der Protokolldatei und optische Hilfen im PDF.</para>
      </description>
    </attribute>
    <attribute name="startpage" type="number" optional="yes">
      <description xml:lang="de">
        <para>Gibt den Nummer der ersten Seite an.</para>
      </description>
    </attribute>
    <attribute name="show-grid" type="yesno" optional="yes">
      <description xml:lang="de">
        <para>Wenn ja, dann zeichnet der Publisher das zugrunde liegende Raster auf die Seiten.</para>
      </description>
    </attribute>
    <attribute name="show-gridallocation" type="yesno" optional="yes">
      <description xml:lang="de">
        <para>Wenn ja, dann markiert der Publisher die belegten Rasterzellen mit einer Hintergrundfarbe.</para>
      </description>
    </attribute>
    <attribute name="show-hyphenation" type="yesno" optional="yes">
      <description xml:lang="de">
        <para>Bei ja markiert der speedata Publisher die möglichen Trennstellen für die Silbentrennung.</para>
      </description>
    </attribute>
    <example xml:lang="de">
      <listing>
        <![CDATA[<Optionen
   zeige_rasterbelegung="nein"
   zeichne_raster="ja"
   beschnittmarken="ja"
   beschnittzugabe="3mm"
  />]]>
      </listing>
    </example>
    <seealso> Schnittmarken und Beschnittzugabe </seealso>
  </command>
  <command name="PositioningArea">
    <description xml:lang="de">
      <para>Beschreibt einen Platzierungsbereich, der mehrere Platzierungsrahmen beinhalten kann. In diesen Rahmen können Elemente platziert werden</para>
    </description>
    <childelements>
      <cmd name="PositioningFrame" />
    </childelements>
    <parentelements>
      <cmd name="Pagetype" />
    </parentelements>
    <attribute name="name" type="text" optional="no">
      <description xml:lang="de">
        <para>Name des Platzierungsbereichs</para>
      </description>
    </attribute>
    <example xml:lang="de">
      <listing><![CDATA[<Platzierungsbereich name="rahmen1">
  <Platzierungsrahmen breite="12" höhe="30" spalte="2" zeile="2"/>
  <Platzierungsrahmen breite="12" höhe="30" spalte="16" zeile="2"/>
</Platzierungsbereich>]]></listing>
    </example>
    <seealso>
      <cmd name="PositioningFrame" />
      <cmd name="PlaceObject" />
    </seealso>
  </command>
  <command name="PositioningFrame">
    <description xml:lang="de">
      <para>Beschreibt einen rechteckigen Bereich, in dem Elemente platziert werden können. Inhalte in diesen Bereichen werden bei Platzmangel automatisch in den nächsten Rahmen deselben Bereichs
        platziert.</para>
    </description>
    <childelements />
    <parentelements>
      <cmd name="PositioningArea" />
    </parentelements>
    <attribute name="width" type="number" optional="no">
      <description xml:lang="de">
        <para>Breite des Rahmens in Rasterkästen</para>
      </description>
    </attribute>
    <attribute name="height" type="number" optional="no">
      <description xml:lang="de">
        <para>Höhe des Rahmens in Rasterkästen</para>
      </description>
    </attribute>
    <attribute name="row" type="number" optional="no">
      <description xml:lang="de">
        <para>Erste Spalte des Rahmens</para>
      </description>
    </attribute>
    <attribute name="column" type="number" optional="no">
      <description xml:lang="de">
        <para>Erste Zeile des Rahmens</para>
      </description>
    </attribute>
    <example xml:lang="de">
      <listing><![CDATA[<Platzierungsbereich name="rahmen1">
  <Platzierungsrahmen breite="12" höhe="30" spalte="2" zeile="2"/>
  <Platzierungsrahmen breite="12" höhe="30" spalte="16" zeile="2"/>
</Platzierungsbereich>]]></listing>
    </example>
    <seealso>
      <cmd name="PositioningArea" />
    </seealso>
  </command>
  <command name="Margin">
    <description xml:lang="de">
      <para>Enthält die Angaben über den Seitenrand des zu druckbaren Bereich.</para>
    </description>
    <childelements />
    <parentelements>
      <cmd name="Pagetype" />
    </parentelements>
    <attribute name="left" type="length" optional="no">
      <description xml:lang="de">
        <para>Rand links</para>
      </description>
    </attribute>
    <attribute name="right" type="length" optional="no">
      <description xml:lang="de">
        <para>Rand rechts</para>
      </description>
    </attribute>
    <attribute name="top" type="length" optional="no">
      <description xml:lang="de">
        <para>Rand oben</para>
      </description>
    </attribute>
    <attribute name="bottom" type="length" optional="no">
      <description xml:lang="de">
        <para>Rand unten</para>
      </description>
    </attribute>
    <example xml:lang="de">
      <listing><![CDATA[<Rand links="2cm" rechts="1cm" oben="1cm" unten="1cm" />]]></listing>
    </example>
    <seealso />
  </command>
  <command name="Grid">
    <description xml:lang="de">
      <para>Überschreibt das allgemeine Raster aus <cmd name="SetGrid" />.</para>
    </description>
    <childelements />
    <parentelements>
      <cmd name="Pagetype" />
    </parentelements>
    <attribute name="width" type="length" optional="no">
      <description xml:lang="de">
        <para>Breite einer Rasterzelle</para>
      </description>
    </attribute>
    <attribute name="height" type="length" optional="no">
      <description xml:lang="de">
        <para>Höhe einer Rasterzelle</para>
      </description>
    </attribute>
    <example xml:lang="de">
      <listing><![CDATA[<SetzeRaster breite="5mm" höhe="14pt" />
 
<Seitentyp name="Seite breit"  bedingung=" $var > 10 ">
  <Rand links="1cm" rechts="2cm" oben="1cm" unten="1cm" />
  <Raster breite="10mm" höhe="14pt" />
</Seitentyp>]]></listing>
      <para>Wenn diese Seite ausgewählt wird, gilt das dort angegebene Raster.</para>
    </example>
    <seealso>
      <cmd name="SetGrid" />
      <cmd name="Pagetype" />
    </seealso>
  </command>
  <command name="Fontface">
    <description xml:lang="de">
      <para>Schaltet vorübergehend auf eine andere Schriftfamilie um.</para>
    </description>
    <childelements>
      <cmd name="B" />
      <cmd name="Image" />
      <cmd name="Switch" />
      <cmd name="I" />
      <cmd name="Fontface" />
      <cmd name="Sub" />
      <cmd name="Sup" />
      <cmd name="U" />
      <cmd name="URL" />
      <cmd name="Value" />
      <cmd name="SetVariable" />
    </childelements>
    <parentelements>
      <cmd name="Paragraph" />
    </parentelements>
    <attribute name="fontfamily" type="text" optional="no">
      <description xml:lang="de">
        <para>Schaltet auf die angegebene Schriftfamilie um.</para>
      </description>
    </attribute>
    <example xml:lang="de">
      <listing><![CDATA[<ObjektAusgeben spalte="1">
  <Textblock breite="20">
    <Absatz schriftart="Groß">
      <Wert>Groß</Wert>
      <Schriftart schriftfamilie="text">
        <Wert>normal</Wert><B><Wert>fett</Wert></B>
      </Schriftart>
    </Absatz>
  </Textblock>
</ObjektAusgeben>]]>
      </listing>
    </example>
    <seealso>
      <cmd name="Paragraph" />
      <cmd name="I" />
      <cmd name="B" />
    </seealso>
  </command>
  <command name="Pageformat">
    <description xml:lang="de">
      <para>Legt die Größe des Ausgabemediums (z.B. DIN A4) fest.</para>
    </description>
    <childelements />
    <parentelements>
      <cmd name="Layout" />
    </parentelements>
    <attribute name="width" type="length" optional="no">
      <description xml:lang="de">
        <para>Breite des Ausgabemediums.</para>
      </description>
    </attribute>
    <attribute name="height" type="length" optional="no">
      <description xml:lang="de">
        <para>Höhe des Ausgabemediums.</para>
      </description>
    </attribute>
    <example xml:lang="de">
      <listing><![CDATA[ <Seitenformat breite="150mm" höhe="150mm" />]]></listing>
    </example>
    <seealso />
  </command>
  <command name="Pagetype">
    <description xml:lang="de">
      <para>Definiert eine Seitenvorlage. Anhand der Kriterien, die im Attribut bedingung angegeben werden, wählt das System eine Seitenvorlage aus.</para>
    </description>
    <childelements>
      <cmd name="Margin" />
      <cmd name="AtPageCreation" />
      <cmd name="AtPageShipout" />
      <cmd name="Grid" />
      <cmd name="PositioningArea" />
    </childelements>
    <parentelements>
      <cmd name="Layout" />
    </parentelements>
    <attribute name="test" type="xpath" optional="no">
      <description xml:lang="de">
        <para>Wenn der XPath-Ausdruck »wahr« ergibt, dann wird diese Seite als Vorlage genommen.</para>
      </description>
    </attribute>
    <attribute name="name" type="text" optional="no">
      <description xml:lang="de">
        <para>Name der Seitenvorlage. Bisher wird der Name nur für interne Zwecke benötigt.</para>
      </description>
    </attribute>
    <remark xml:lang="de">
      <para>Die Inhalte des Elements BeiSeitenErzeugung werden ausgeführt, sobald das erste Mal auf die Seite zugegriffen wird, bei BeiSeitenAusgabe werden die Inhalte ausgeführt, sobald
        beispielsweise NeueSeite aufgerufen wird.</para>
      <para>Wenn eine neue Seite erzeugt wird, werden die Seitentypen in umgekehrter Reihenfolge geprüft. Das bedeutet, dass die allgemeineren Seitentypen zuerst definiert werden müssen, später die
        speziellen. Das ist nur dann wichtig, wenn mehrere Bedingungen »wahr« ergeben würden. </para>
    </remark>
    <example xml:lang="de">
      <listing><![CDATA[<Seitentyp name="rechte Seite" bedingung=" sd:ungerade( sd:aktuelle-seite() ) ">]]></listing>
      <listing><![CDATA[<Seitentyp name="linke Seite" bedingung=" sd:gerade( sd:aktuelle-seite() ) ">]]></listing>
      <listing><![CDATA[<Seitentyp name="Hauptteil rechte Seite" bedingung=" sd:ungerade( sd:aktuelle-seite() )  and $kapitel='hauptteil' ">]]></listing>
      <listing><![CDATA[<Seitentyp name="rechte Seite" bedingung="sd:ungerade( sd:aktuelle-seite() )">
  <Rand links="1cm" rechts="1cm" oben="1cm" unten="1cm"/>
  <BeiSeitenErzeugung>
    <ObjektAusgeben spalte="1">
      ...
    </ObjektAusgeben>
  </BeiSeitenErzeugung>
  <BeiSeitenAusgabe>
    <ObjektAusgeben spalte="1">
      ....
    </ObjektAusgeben>
  </BeiSeitenAusgabe>
  <Platzierungsbereich name="rahmen1">
    <Platzierungsrahmen breite="12" höhe="30" spalte="2" zeile="2"/>
    <Platzierungsrahmen breite="12" höhe="30" spalte="16" zeile="2"/>
  </Platzierungsbereich>
</Seitentyp>]]></listing>
    </example>
    <seealso> XPath-Expression, <cmd name="AtPageCreation" />
      <cmd name="AtPageShipout" />
      <cmd name="PositioningArea" />
    </seealso>
  </command>
  <command name="SetGrid">
    <description xml:lang="de">
      <para>Setzt die Größe und Höhe eines Rasterkästchens. In dem Seitenraster können Elemente platziert werden</para>
    </description>
    <childelements />
    <parentelements>
      <cmd name="Layout" />
    </parentelements>
    <attribute name="width" type="length" optional="no">
      <description xml:lang="de">
        <para>Breite einer Rasterzelle</para>
      </description>
    </attribute>
    <attribute name="height" type="length" optional="no">
      <description xml:lang="de">
        <para>Höhe einer Rasterzelle</para>
      </description>
    </attribute>
    <example xml:lang="de">
      <listing><![CDATA[<SetzeRaster breite=“4mm” höhe=“14pt” />]]></listing>
    </example>
    <seealso><cmd name="Grid" /></seealso>
  </command>
  <command name="While">
    <description xml:lang="de">
      <para>Erzeugt eine Schleife, die wiederholt durchlaufen wird. Die Kindelemente werden so oft ausgeführt, solange die Bedingung im Attribut bedingung wahr ergibt.</para>
    </description>
    <childelements>
      <cmd name="Value" />
      <cmd name="SetVariable" />
    </childelements>
    <parentelements>
      <cmd name="Record" />
    </parentelements>
    <attribute name="test" type="xpath" optional="no">
      <description xml:lang="de">
        <para>Für jedes Mal, das die Schleife durchlaufen werden soll, muss die Bedingung im Attribut erfüllt sein.</para>
      </description>
    </attribute>
    <example xml:lang="de">
      <para>Folgendes Beispiel erzeugt einen Textblock mit dem Inhalt „Text Text Text“.</para>
      <listing><![CDATA[<Datensatz element="url">
  <Zuweisung variable="zaehler" auswahl="1"/>
  <Zuweisung variable="text" auswahl="''"/>
  <Solange bedingung=" $zaehler &lt;= 3 "> <!-- kleiner oder gleich -->
    <Zuweisung variable="zaehler" auswahl=" $zaehler + 1"/>
    <Zuweisung variable="text">
      <Wert auswahl="$text"/>
      <Wert auswahl="'Text '"/>
    </Zuweisung>
  </Solange>
  <ObjektAusgeben spalte="1">
    <Textblock breite="10">
      <Absatz><Wert auswahl="$text"></Wert></Absatz>
    </Textblock>
  </ObjektAusgeben>
</Datensatz>]]></listing>
    </example>
    <seealso>
      <cmd name="Switch" />
      <cmd name="SetVariable" />
    </seealso>
  </command>
  <command name="Otherwise">
    <description xml:lang="de">
      <para>Zweig, der bei <cmd name="Switch" /> ausgeführt wird, wenn kein <cmd name="Case" /> wahr ist.</para>
    </description>
    <childelements>
      <cmd name="LoadDataset" />
      <cmd name="SaveDataset" />
      <cmd name="PlaceObject" />
      <cmd name="Switch" />
      <cmd name="While" />
      <cmd name="ProcessRecord" />
      <cmd name="ProcessNode" />
      <cmd name="Message" />
      <cmd name="NextFrame" />
      <cmd name="NewPage" />
      <cmd name="NextRow" />
      <cmd name="EmptyLine" />
      <cmd name="Group" />
      <cmd name="SortSequence" />
      <cmd name="Hyphenation" />
      <cmd name="SetVariable" />
    </childelements>
    <parentelements>
      <cmd name="Switch" />
    </parentelements>
    <example xml:lang="de">
      <para>Siehe das Beispiel bei <cmd name="Switch" />.</para>
    </example>
    <seealso>
      <cmd name="Switch " />, <cmd name="Case" />
    </seealso>
  </command>
  <command name="SortSequence">
    <description xml:lang="de">
      <para>Sortiert eine Liste.</para>
    </description>
    <childelements />
    <parentelements>
      <cmd name="Case" />
      <cmd name="Record" />
    </parentelements>
    <attribute name="select" type="xpath" optional="no">
      <description xml:lang="de">
        <para>Datensatz, der sortiert werden soll</para>
      </description>
    </attribute>
    <attribute name="removeduplicates" type="text" optional="yes">
      <description xml:lang="de">
        <para>Wenn Duplikate gelöscht werden sollen, steht hier das Attribut mit dem Inhalt.</para>
      </description>
    </attribute>
    <attribute name="criterium" type="text" optional="no">
      <description xml:lang="de">
        <para>Attributname, nach dem sortiert werden soll</para>
      </description>
    </attribute>
    <remark xml:lang="de">
      <para>Die Liste (im Beispiel $artikelnummern) wird verändert.</para>
    </remark>
    <example xml:lang="de">
      <listing><![CDATA[<SortiereSequenz auswahl=" $artikelnummern " kriterium="prio" duplikatelöschen="seriennummer" />]]></listing>
    </example>
    <seealso />
  </command>
  <command name="Column">
    <description xml:lang="de">
      <para>Gibt die Eigenschaften einer Spalte in einer Tabelle an.</para>
    </description>
    <childelements />
    <parentelements>
      <cmd name="Columns" />
    </parentelements>
    <attribute name="width" type="numberlengthorstar" optional="yes">
      <description xml:lang="de">
        <para>Breite der Spalte. Kann entweder in Rasterzellen (Zahl), absoluten Maßangaben (z.B. 1cm) oder in *-Angaben (z.B. 4*) angegeben werden.</para>
      </description>
    </attribute>
    <attribute name="align" type="align" optional="yes">
      <description xml:lang="de">
        <para>Die horizontale Ausrichtung des Tabelleninhalts. Kann in einer Zelle (Td) überschrieben werden.</para>
      </description>
    </attribute>
    <attribute name="valign" type="valign" optional="yes">
      <description xml:lang="de">
        <para>Die vertikale Ausrichtung des Tabelleninhalts. Kann in einer Zelle (Td) überschrieben werden.</para>
      </description>
    </attribute>
    <attribute name="backgroundcolor" type="text" optional="yes">
      <description xml:lang="de">
        <para>Farbe der Tabellenspalte.</para>
      </description>
    </attribute>
    <example xml:lang="de">
      <listing><![CDATA[<Tabelle>
  <Spalten>
    <Spalte breite="14mm" />
    <Spalte breite="2" />
    <Spalte breite="1*" align="right" valign="top" />
    <Spalte breite="5*" />
    <Spalte breite="5mm" hintergrundfarbe="grau" />
  </Spalten>
</Tabelle>]]></listing>
    </example>
    <seealso>
      <cmd name="Table" />
      <cmd name="Columns" />
    </seealso>
  </command>
  <command name="Columns">
    <description xml:lang="de">
      <para>Legt die Spaltenbreiten in einer Tabelle fest.</para>
    </description>
    <childelements>
      <cmd name="Column" />
    </childelements>
    <parentelements>
      <cmd name="Table" />
    </parentelements>
    <remark xml:lang="de">
      <para>Die *-Breitenangaben im Element »Spalte« ermöglicht eine dynamische Aufteilung der Spaltenbreite. Dazu muss die Tabellenbreite vorgegeben sein und das Attribut dehnen bei Tabelle auf max
        stehen. Die Spaltenbreiten berechnen sich wie folgt: erst werden die fixen Breitenangaben berücksichtigt. Anschließend werden die *-Spalten auf den verbleibenden Platz verteilt. Die Angaben
        vor den Sternchen dienen der Verteilung innerhalb der *-Spalten. Im Beispiel unten nimmt die vierte Spalte in etwa den fünffachen Platz der dritten Spalte ein. Angenommen die Tabelle sollte
        32mm breit werden. Die fixen Spalten nehmen davon 20mm in Anspruch, übrig bleiben 12 mm. Diese 12mm werden auf die beiden Spalten verteilt, 2mm entfallen auf die 1*-Spalte (1/6 von 12mm), 10mm
        auf die 5*-Spalte (5/6 von 12mm).</para>
    </remark>
    <example xml:lang="de">
      <listing><![CDATA[<Tabelle>
  <Spalten>
    <Spalte breite="14mm" />
    <Spalte breite="2" />
    <Spalte breite="1*" align="right" valign="top" />
    <Spalte breite="5*" />
    <Spalte breite="5mm" hintergrundfarbe="grau" />
  </Spalten>
</Tabelle>]]></listing>
    </example>
    <seealso>
      <cmd name="Table" />, <cmd name="Column" />
    </seealso>
  </command>
  <command name="SaveDataset">
    <description xml:lang="de">
      <para>Speichert eine XML-Datei auf Festplatte. Diese Datei muss als Kindelement hierarchische Struktur, zum Beispiel aus den Befehlen Element und Attribut enthalten, wahlweise zusammengesetzt
        durch Variablen. Eine ausführlichere Erläuterung findet sich im Abschnitt über automatisch generierte Verzeichnisse.</para>
    </description>
    <childelements>
      <cmd name="Element" />
      <cmd name="Copy-of" />
      <cmd name="SortSequence" />
      <cmd name="Sequence" />
    </childelements>
    <parentelements>
      <cmd name="Record" />
    </parentelements>
    <attribute name="filename" type="text" optional="no">
      <description xml:lang="de">
        <para>Name der Dateisatzdatei. Beispiel: toc</para>
      </description>
    </attribute>
    <attribute name="elementname" type="text" optional="no">
      <description xml:lang="de">
        <para>Name des Wurzelelements, das erzeugt wird.</para>
      </description>
    </attribute>
    <attribute name="select" type="xpath" optional="yes">
      <description xml:lang="de">
        <para>Alternativ zur Angabe des Datensatzes im Kindelement.</para>
      </description>
    </attribute>
    <example xml:lang="de">
      <listing><![CDATA[<SpeichereDatensatzdatei dateiname="toc" elementname="Inhalt">
   <KopieVon auswahl="$Inhalt"/>
</SpeichereDatensatzdatei>]]></listing>
      <para>Äquivalent dazu ist:</para>
      <listing><![CDATA[<SpeichereDatensatzdatei dateiname="toc" elementname="Inhalt" auswahl="$Inhalt" />]]></listing>
    </example>
    <seealso>
      <cmd name="Element" />
      <cmd name="Attribute" />
      <cmd name="LoadDataset" /> Wie werden automatische Verzeichnisse erstellt?</seealso>
  </command>
  <command name="Sub">
    <description xml:lang="de">
      <para>Erzeugt tiefgestellten Text.</para>
    </description>
    <childelements>
      <cmd name="Value" />
    </childelements>
    <parentelements>
      <cmd name="Paragraph" />
    </parentelements>
    <example xml:lang="de">
      <listing><![CDATA[<ObjektAusgeben spalte="1">
  <Textblock breite="20">
    <Absatz><Wert>Text</Wert><Sub><Wert>tief</Wert></Sub></Absatz>
  </Textblock>
</ObjektAusgeben>]]></listing>
    </example>
    <seealso>
      <cmd name="Sup" />, <cmd name="Paragraph" />
    </seealso>
  </command>
  <command name="Sup">
    <description xml:lang="de">
      <para>Erzeugt hochgestellten Text.</para>
    </description>
    <childelements>
      <cmd name="Value" />
    </childelements>
    <parentelements>
      <cmd name="Paragraph" />
    </parentelements>
    <example xml:lang="de">
      <listing><![CDATA[<ObjektAusgeben spalte="1">
  <Textblock breite="20">
    <Absatz><Wert>Text</Wert><Sup><Wert>hoch</Wert></Sup></Absatz>
  </Textblock>
</ObjektAusgeben>]]></listing>
    </example>
    <seealso>
      <cmd name="Paragraph" />
      <cmd name="Sub" />
    </seealso>
  </command>
  <command name="Stylesheet">
    <description xml:lang="en">
      <para>Load a CSS file</para>
    </description>
    <description xml:lang="de">
      <para>Lädt eine CSS-Datei</para>
    </description>
    <childelements/>
    <parentelements>
      <cmd name="Layout"/>
    </parentelements>
    <attribute name="filename" type="text" optional="no">
      <description xml:lang="en">
        <para>The filename of the CSS stylesheet including the file extension.</para>
      </description>
      <description xml:lang="de">
        <para>Der Dateiname der CSS Datei (inklusive Dateiendung).</para>
      </description>
    </attribute>
    <example xml:lang="en">
      <listing><![CDATA[<Stylesheet filename="style.css" />]]></listing>
    </example>
    <example xml:lang="de">
      <listing><![CDATA[<Stylesheet dateiname="style.css" />]]></listing>
    </example>
    <seealso></seealso>
  </command>
  <command name="Table">
    <description xml:lang="de">
      <para>Erzeugt eine Tabelle, die in etwa dem HTML Tabellenmodell entspricht</para>
    </description>
    <childelements>
      <cmd name="Columns" />
      <cmd name="Tr" />
      <cmd name="Tablerule" />
      <cmd name="Tablefoot" />
      <cmd name="Tablehead" />
    </childelements>
    <parentelements>
      <cmd name="PlaceObject" />
    </parentelements>
    <attribute name="stretch" type="maxno" optional="yes">
      <description xml:lang="de">
        <para>Wenn der Tabelleninhalt schmal ist und dehnen den Wert nein hat, dann nimmt die Tabelle nur den benötigten Platz ein. Wenn der Tabelleninhalt breit ist oder dehnen den Wert max hat, dann
          nimmt die Tabelle den Wert aus dem Attribut breite ein.</para>
      </description>
    </attribute>
    <attribute name="width" type="number" optional="yes">
      <description xml:lang="de">
        <para>Der Bereich, den die Tabelle (maximal) im Raster belegt.</para>
      </description>
    </attribute>
    <attribute name="padding" type="length" optional="yes">
      <description xml:lang="de">
        <para>Der Innenabstand innerhalb einer Tabellenzelle.</para>
      </description>
    </attribute>
    <attribute name="fontface" type="text" optional="yes">
      <description xml:lang="de">
        <para>Name der Schriftfamilie, die benutzt werden soll. Wenn keine Schriftart angegeben ist, wird auf die Schriftart ›text‹ umgeschaltet.</para>
      </description>
    </attribute>
    <attribute name="columndistance" type="length" optional="yes">
      <description xml:lang="de">
        <para>Der Abstand zwischen zwei Spalten.</para>
      </description>
    </attribute>
    <attribute name="textformat" type="text" optional="yes">
      <description xml:lang="de">
        <para>Das Textformat, das benutzt wird, wenn kein anderes angegeben wird. Voreinstellung ist ›text‹'</para>
      </description>
    </attribute>
    <attribute name="leading" type="length" optional="yes">
      <description xml:lang="de">
        <para>Der Abstand zwischen zwei Zeilen.</para>
      </description>
    </attribute>
    <remark xml:lang="de">
      <para>Die Tabellenzellen dürfen Absätze (Absatz), Bilder (Bild) und wiederum Tabellen enthalten.</para>
    </remark>
    <example xml:lang="de">
      <listing><![CDATA[<ObjektAusgeben spalte="1">
  <Tabelle breite="29" padding="1mm" zeilenabstand="0mm" spaltenabstand="0pt" dehnen="max">
    <Tabellenkopf>
      <Tlinie linienstärke="1pt" />
      <Tr>
        <Td align="center"><Absatz><Wert>Platz</Wert></Absatz></Td>
        <Td align="center"><Absatz><Wert>Club</Wert></Absatz></Td>
        <Td align="center"><Absatz><Wert>Punkte</Wert></Absatz></Td>
        <Td align="center"><Absatz><Wert>Differenz</Wert></Absatz></Td>
      </Tr>
      <Tlinie linienstärke="0.6pt" />
    </Tabellenkopf>
    <Tr>
      <Td align="center"><Absatz><Wert>1</Wert></Absatz></Td>
      <Td><Absatz><Wert>FC Bayern München</Wert></Absatz></Td>
      <Td align="center"><Absatz><Wert>56</Wert></Absatz></Td>
      <Td align="center"><Absatz><Wert>+31</Wert></Absatz></Td>
      <Td rowspan="2"><Absatz><Wert>CL</Wert></Absatz></Td>
    </Tr>
    <Tr>
      <Td align="center"><Absatz><Wert>2</Wert></Absatz></Td>
      <Td><Absatz><Wert>FC Schalke 04</Wert></Absatz></Td>
      <Td align="center"><Absatz><Wert>54</Wert></Absatz></Td>
      <Td align="center"><Absatz><Wert>+22</Wert></Absatz></Td>
    </Tr>
    <Tr>
      <Td align="center"><Absatz><Wert>3</Wert></Absatz></Td>
      <Td><Absatz><Wert>Bayer 04 Leverkusen</Wert></Absatz></Td>
      <Td align="center"><Absatz><Wert>53</Wert></Absatz></Td>
      <Td align="center"><Absatz><Wert>+31</Wert></Absatz></Td>
      <Td><Absatz><Wert>CL Qual.</Wert></Absatz></Td>
    </Tr>
    <Tr>
      <Td align="center"><Absatz><Wert>4</Wert></Absatz></Td>
      <Td><Absatz><Wert>Borussia Dortmund</Wert></Absatz></Td>
      <Td align="center"><Absatz><Wert>45</Wert></Absatz></Td>
      <Td align="center"><Absatz><Wert>+10</Wert></Absatz></Td>
      <Td><Absatz><Wert>EL Qual.</Wert></Absatz></Td>
    </Tr>
    <Tabellenfuß>
      <Tlinie linienstärke="1pt" />
    </Tabellenfuß>
  </Tabelle>
</ObjektAusgeben>]]></listing>
    </example>
    <seealso>
      <cmd name="Tr" />
      <cmd name="Td" />
      <cmd name="Tablerule" />
      <cmd name="PlaceObject" />
    </seealso>
  </command>
  <command name="Tablefoot">
    <description xml:lang="de">
      <para>Gibt den Tabellenfuß an.</para>
    </description>
    <childelements>
      <cmd name="Tablerule" />
      <cmd name="Tr" />
    </childelements>
    <parentelements>
      <cmd name="Table" />
    </parentelements>
    <attribute name="page" type="all_last" optional="yes">
      <description xml:lang="en">
        <para>This command is only valid for the given pages. The default is to place the foot on all pages.</para>
      </description>
      <description xml:lang="de">
        <para>Der Tabellenfuß wird nur auf den angegebenen Seiten platziert. Voreinstellung ist, dass er auf jeder Seite erscheint.</para>
      </description>
    </attribute>
    <remark xml:lang="de">
      <para>Der Inhalt von Tabellenfuß wird auf jeder Seite einer automatisch umbrochenen Tabelle wiederholt.</para>
    </remark>
    <example xml:lang="de">
      <para>Siehe Erläuterung zu <cmd name="Table" /></para>
    </example>
    <seealso>
      <cmd name="Tablehead" />
    </seealso>
  </command>
  <command name="Tablehead">
    <description xml:lang="de">
      <para>Gibt den Tabellenkopf an.</para>
    </description>
    <childelements>
      <cmd name="Tablerule" />
      <cmd name="Tr" />
    </childelements>
    <parentelements>
      <cmd name="Table" />
    </parentelements>
    <remark xml:lang="de">
      <para>Der Inhalt von Tabellenkopf wird auf jeder Seite einer automatisch umbrochenen Tabelle wiederholt.</para>
    </remark>
    <example xml:lang="de">
      <para>Siehe Erläuterung zu <cmd name="Table" /></para>
    </example>
    <seealso>
      <cmd name="Tablefoot" />
    </seealso>
  </command>
  <command name="Td">
    <description xml:lang="de">
      <para>Erstellt eine Tabellenzelle</para>
    </description>
    <childelements>
      <cmd name="Paragraph" />
      <cmd name="Image" />
      <cmd name="Table" />
    </childelements>
    <parentelements>
      <cmd name="Tr" />
    </parentelements>
    <attribute name="border-left" type="length" optional="yes">
      <description xml:lang="de">
        <para>Die Breite der Linie links. Die Linie liegt innerhalb der Zelle.</para>
      </description>
    </attribute>
    <attribute name="border-right" type="length" optional="yes">
      <description xml:lang="de">
        <para>Die Breite der Linie rechts. Die Linie liegt innerhalb der Zelle.</para>
      </description>
    </attribute>
    <attribute name="border-top" type="length" optional="yes">
      <description xml:lang="de">
        <para>Die Breite der Linie oben. Die Linie liegt innerhalb der Zelle.</para>
      </description>
    </attribute>
    <attribute name="border-bottom" type="length" optional="yes">
      <description xml:lang="de">
        <para>Die Breite der Linie unten. Die Linie liegt innerhalb der Zelle.</para>
      </description>
    </attribute>
    <attribute name="border-left-color" type="text" optional="yes">
      <description xml:lang="de">
        <para>Die Farbe der Linie links.</para>
      </description>
    </attribute>
    <attribute name="border-right-color" type="text" optional="yes">
      <description xml:lang="de">
        <para>Die Farbe der Linie rechts.</para>
      </description>
    </attribute>
    <attribute name="border-top-color" type="text" optional="yes">
      <description xml:lang="de">
        <para>Die Farbe der Linie oben.</para>
      </description>
    </attribute>
    <attribute name="border-bottom-color" type="text" optional="yes">
      <description xml:lang="de">
        <para>Die Farbe der Linie unten.</para>
      </description>
    </attribute>
    <attribute name="colspan" type="number" optional="yes">
      <description xml:lang="de">
        <para>Die Anzahl der Spalten, die die Zelle überdecken soll. Voreinstellung ist 1.</para>
      </description>
    </attribute>
    <attribute name="rowspan" type="number" optional="yes">
      <description xml:lang="de">
        <para>Die Anzahl der Zeilen, die die Zelle überdecken soll. Voreinstellung ist 1.</para>
      </description>
    </attribute>
    <attribute name="align" type="align" optional="yes">
      <description xml:lang="de">
        <para>Die horizontale Ausrichtung des Tabelleninhalts</para>
      </description>
    </attribute>
    <attribute name="valign" type="valign" optional="yes">
      <description xml:lang="de">
        <para>Die vertikale Ausrichtung des Tabelleninhalts.</para>
      </description>
    </attribute>
    <attribute name="padding" type="length" optional="yes">
      <description xml:lang="de">
        <para>Kurzform für die Bestimmung von padding-top und den anderen drei Werden mit derselben Maßangabe</para>
      </description>
    </attribute>
    <attribute name="padding-top" type="length" optional="yes">
      <description xml:lang="de">
        <para>Bestimmt den Innenabstand einer Tabelle (oben)</para>
      </description>
    </attribute>
    <attribute name="padding-bottom" type="length" optional="yes">
      <description xml:lang="de">
        <para>Bestimmt den Innenabstand einer Tabelle (unten)</para>
      </description>
    </attribute>
    <attribute name="padding-left" type="length" optional="yes">
      <description xml:lang="de">
        <para>Bestimmt den Innenabstand einer Tabelle (links)</para>
      </description>
    </attribute>
    <attribute name="padding-right" type="length" optional="yes">
      <description xml:lang="de">
        <para>Bestimmt den Innenabstand einer Tabelle (rechts)</para>
      </description>
    </attribute>
    <remark xml:lang="de">
      <para>Das Attribut align erzeugt implizit ein Textformat (nur in Bezug auf Ausrichtung) für alle Kindelemente Absatz, sofern dort kein Textformat angegeben ist.</para>
      <para>Tabellen dürfen wiederum Tabellen enthalten.</para>
    </remark>
    <example xml:lang="de">
      <listing><![CDATA[<Tr>
  <Td colspan="2" align="right"><Absatz><Wert>Text</Wert></Absatz></Td>
  <Td rowspan="3"><Bild breite="3" datei="bildname.jpg"/></Td>
</Tr>]]></listing>
    </example>
    <seealso>
      <cmd name="Table" />
      <cmd name="Tr" />
      <cmd name="Paragraph" />
      <cmd name="Image" />
    </seealso>
  </command>
  <command name="Tablerule">
    <description xml:lang="de">
      <para>Erzeugt eine horizontale Linie in einer Tabelle</para>
    </description>
    <childelements />
    <parentelements>
      <cmd name="Table" />
    </parentelements>
    <attribute name="rulewidth" type="length" optional="yes">
      <description xml:lang="de">
        <para>Die »Dicke« der Linie. Voreinstellung ist 0.4 Punkt.</para>
      </description>
    </attribute>
    <attribute name="color" type="text" optional="yes">
      <description xml:lang="de">
        <para>Farbe der Linie. (Default: Schwarz)</para>
      </description>
    </attribute>
    <remark xml:lang="de">
      <para>Die Linie geht über die gesamte Breite der Tabelle und verschiebt nachfolgende Zeilen nach unten.</para>
    </remark>
    <example xml:lang="de">
      <listing><![CDATA[<Tlinie linienstärke="1pt" />
<Tr>
  <Td align="center">Platz</Td>
  <Td align="center">Club</Td>
  <Td align="center">Punkte</Td>
  <Td align="center">Differenz</Td>
</Tr>
<Tlinie linienstärke="0.6pt" />
...]]></listing>
    </example>
    <seealso>
      <cmd name="Table" />
    </seealso>
  </command>
  <command name="Tr">
    <description xml:lang="de">
      <para>Erstellt eine Tabellenzeile</para>
    </description>
    <childelements>
      <cmd name="Td" />
    </childelements>
    <parentelements>
      <cmd name="Table" />
      <cmd name="Tablehead" />
      <cmd name="Tablefoot" />
    </parentelements>
    <attribute name="align" type="align" optional="yes">
      <description xml:lang="de">
        <para>Die horizontale Ausrichtung des Tabelleninhalts (gilt für die gesamte Zeile).</para>
      </description>
    </attribute>
    <attribute name="valign" type="valign" optional="yes">
      <description xml:lang="de">
        <para>Die vertikale Ausrichtung des Tabelleninhalts (gilt für die gesamte Zeile).</para>
      </description>
    </attribute>
    <attribute name="minheight" type="number" optional="yes">
      <description xml:lang="de">
        <para>Die Mindesthöhe der Zeile in Rasterzellen.</para>
      </description>
    </attribute>
    <attribute name="backgroundcolor" type="text" optional="yes">
      <description xml:lang="de">
        <para>Die Farbe der Zellen in der Zeile.</para>
      </description>
    </attribute>
    <remark xml:lang="de">
      <para>Das Attribut minhöhe war in einer vorigen Version minhoehe.</para>
    </remark>
    <example xml:lang="de">
      <listing><![CDATA[<Tr minhöhe="8mm" hintergrundfarbe="gelb">
  <Td align="center"><Absatz><Wert>4</Wert></Absatz></Td>
  <Td><Absatz><Wert>Borussia Dortmund</Wert></Absatz></Td>
  <Td align="center"><Absatz><Wert>45</Wert></Absatz></Td>
  <Td align="center"><Absatz><Wert>+10</Wert></Absatz></Td>
  <Td><Absatz><Wert>EL Qual.</Wert></Absatz></Td>
</Tr>]]></listing>
    </example>
    <seealso>
      <cmd name="Td" />
      <cmd name="Table" />
    </seealso>
  </command>
  <command name="Hyphenation">
    <description xml:lang="de">
      <para>Erzeugt einen Trennvorschlag für die automatische Silbentrennung. Die Trennvorschläge werden dann benutzt, wenn die automatische Silbentrennung fehlerhaft trennt. Alle Trennstellen müssen
        mit eine Bindestrich (-) markiert werden (s. Beispiel).</para>
    </description>
    <childelements />
    <parentelements>
      <cmd name="Record" />
      <cmd name="Layout" />
    </parentelements>
    <example xml:lang="de">
      <listing><![CDATA[<Trennvorschlag>Au-to-bahn</Trennvorschlag>]]></listing>
    </example>
    <seealso />
  </command>
  <command name="U">
    <description xml:lang="de">
      <para>Schaltet »Unterstreichen« ein.</para>
    </description>
    <childelements>
      <cmd name="B" />
      <cmd name="Image" />
      <cmd name="Switch" />
      <cmd name="I" />
      <cmd name="Fontface" />
      <cmd name="Sub" />
      <cmd name="Sup" />
      <cmd name="U" />
      <cmd name="URL" />
      <cmd name="Value" />
    </childelements>
    <parentelements>
      <cmd name="Paragraph" />
    </parentelements>
    <remark xml:lang="de">
      <para>Funktioniert derzeit nicht zusammen mit optischen Randausgleich.</para>
    </remark>
    <example xml:lang="de">
      <listing><![CDATA[<ObjektAusgeben spalte="1" zeile="1">
  <Textblock breite="18">
    <Absatz>
      <U><Wert>Unterstrichener Text</Wert></U>
    </Absatz>
  </Textblock>
</ObjektAusgeben>]]></listing>
    </example>
    <seealso>
      <cmd name="B" />
      <cmd name="I" />
      <cmd name="Paragraph" />
    </seealso>
  </command>
  <command name="URL">
    <description xml:lang="de">
      <para>Ermöglicht ein sinnvolles Umbrechen einer URL.</para>
    </description>
    <childelements>
      <cmd name="B" />
      <cmd name="Image" />
      <cmd name="Switch" />
      <cmd name="I" />
      <cmd name="Fontface" />
      <cmd name="Sub" />
      <cmd name="Sup" />
      <cmd name="U" />
      <cmd name="URL" />
      <cmd name="Value" />
    </childelements>
    <parentelements>
      <cmd name="B" />
      <cmd name="Image" />
      <cmd name="Switch" />
      <cmd name="I" />
      <cmd name="Fontface" />
      <cmd name="Sub" />
      <cmd name="Sup" />
      <cmd name="U" />
      <cmd name="URL" />
      <cmd name="Value" />
    </parentelements>
    <example xml:lang="de">
      <listing><![CDATA[<Textblock breite="27" spalte="2" textformat="text">
  <Absatz>
    <Wert>URL: </Wert>
    <URL><Wert>http://www.speedata.de/publisher</Wert></URL>
  </Absatz>
</Textblock>]]></listing>
    </example>
    <seealso />
  </command>
  <command name="Value">
    <description xml:lang="de">
      <para>Beschreibt einen Textinhalt</para>
    </description>
    <childelements> </childelements>
    <parentelements>
      <cmd name="B" />
      <cmd name="Image" />
      <cmd name="Switch" />
      <cmd name="I" />
      <cmd name="Fontface" />
      <cmd name="Sub" />
      <cmd name="Sup" />
      <cmd name="U" />
      <cmd name="URL" />
    </parentelements>
    <attribute name="select" type="xpath" optional="yes">
      <description xml:lang="de">
        <para>Wert, der zum umgebenden Element übergeben wird.</para>
      </description>
    </attribute>
    <remark xml:lang="de">
      <para>Der Inhalt kann entweder als XPath-Ausdruck im Attribut auswahl oder als Elementinhalt angegeben werden.</para>
    </remark>
    <example xml:lang="de">
      <listing><![CDATA[<Textblock breite="14" schriftart="text">
  <Absatz>
    <Wert auswahl="@name"/><Wert>, Symbol=</Wert><Wert auswahl="@symbol" />
  </Absatz>
</Textblock>]]></listing>
    </example>
    <seealso>
      <cmd name="Copy-of" />
      <ref name="XPath-Expression" />
      <cmd name="SetVariable" />
    </seealso>
  </command>
  <command name="SetVariable">
    <description xml:lang="de">
      <para>Weist einer Variablen einen Wert zu. Der Wert kann aus mehreren Elementen bestehen (siehe zweites Beispiel).</para>
    </description>
    <childelements />
    <parentelements>
      <cmd name="Record" />
    </parentelements>
    <attribute name="variable" type="text" optional="no">
      <description xml:lang="de">
        <para>Name der Variablen, der etwas zugewiesen werden soll.</para>
      </description>
    </attribute>
    <attribute name="select" type="xpath" optional="yes">
      <description xml:lang="de">
        <para>Inhalt, der der Variablen zugewiesen wird.</para>
      </description>
    </attribute>
    <example xml:lang="de">
      <listing><![CDATA[<Datensatz element="produkt">
  <Zuweisung variable="Textbreite" auswahl=" 5 "/>
  <ObjektAusgeben spalte="1">
    <Textblock breite="{ $Textbreite }">
      <Absatz>
        <Variable name="Artikelnummer"/>
      </Absatz>
    </Textblock>
  </ObjektAusgeben>
</Datensatz>]]></listing>
      <para>Folgendes Beispiel zeigt, wie mehrere Absätze in einer Variablen gespeichert werden, um sie anschließend in einem Textblock auszugeben.</para>
      <listing><![CDATA[<Datensatz element="produkte">
  <Zuweisung variable="Artikeltext" auswahl="''"/>
  <BearbeiteKnoten auswahl="artikel"/>
  <ObjektAusgeben spalte="1">
    <Textblock breite="10">
      <Wert auswahl=" $Artikeltext "/>
    </Textblock>
  </ObjektAusgeben>
</Datensatz>

<Datensatz element="artikel">
  <Zuweisung variable="Artikeltext">
    <Wert auswahl="$Artikeltext"/>
    <Absatz>
      <Wert auswahl=" @beschreibung " />
    </Absatz>
  </Zuweisung>
</Datensatz>]]></listing>
    </example>
    <seealso>
      <cmd name="Value" />
    </seealso>
  </command>
</commands>
